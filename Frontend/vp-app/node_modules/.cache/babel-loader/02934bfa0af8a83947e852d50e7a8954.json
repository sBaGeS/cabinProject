{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\pages\\\\admin_tools\\\\EditCustomerDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { getToken, getUserId } from '../../Utils/Common';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  formRoot: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  Infotxt: {\n    color: 'yellow'\n  }\n}));\nexport default function EditCustomerDialog(props) {\n  const token = getToken();\n  const customerId = props.id;\n  const classes = useStyles();\n  const [customerInfo, setCustomerInfo] = useState([]);\n  const [dialogOpen, setDialogOpen] = useState(true);\n  const [firstname, setFirstname] = useState(customerInfo[0].firstname);\n  const [firstnameErrorMsg, setFirstnameErrorMsg] = useState(\"\");\n  const [lastname, setLastname] = useState(customerInfo[0].lastname);\n  const [lastnameErrorMsg, setLastnameErrorMsg] = useState(\"\");\n  const [address, setAddress] = useState(customerInfo[0].address);\n  const [addressErrorMsg, setAddressErrorMsg] = useState(\"\");\n  const [postcode, setPostcode] = useState(customerInfo[0].postcode);\n  const [postcodeErrorMsg, setPostcodeErrorMsg] = useState(\"\");\n  const [postarea, setPostarea] = useState(customerInfo[0].postarea);\n  const [postareaErrorMsg, setPostareaErrorMsg] = useState(\"\");\n  const [phonenumber, setPhonenumber] = useState(customerInfo[0].phonenumber);\n  const [phonenumberErrorMsg, setPhonenumberErrorMsg] = useState(\"\");\n  const [email, setEmail] = useState(customerInfo[0].email);\n  const [emailErrorMsg, setEmailErrorMsg] = useState(\"\");\n  const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\n  useEffect(() => {\n    const getCustomerInfo = () => {\n      axios.get(\"http://localhost:3001/person?id=\" + customerId, {\n        headers: {\n          token: token\n        }\n      }).then(function (response) {\n        console.log(response);\n        setCustomerInfo(response.data.Persons);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    if (props.edit) {\n      getCustomerInfo();\n    }\n  }, []);\n\n  const axiosUpdate = () => {\n    axios.put('http://localhost:3001/person/' + customerId, {\n      firstname: firstname,\n      lastname: lastname,\n      address: address,\n      postcode: postcode,\n      postarea: postarea,\n      phonenumber: phonenumber,\n      email: email\n    }, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setDialogOpen(false);\n      window.location.reload(false);\n      props.edit(false);\n    }).catch(function (error) {\n      console.log(error.response);\n      setServerErrorMsg(error.response.data.msg);\n    });\n  };\n\n  const handleClose = () => {\n    setDialogOpen(false);\n    props.edit(false);\n  };\n\n  const handleEditClicked = () => {\n    let firstnameValiadtionError = false;\n    let lastnameValidationError = false;\n    let addressValidationError = false;\n    let postcodeValidationError = false;\n    let postareaValidationError = false;\n    let phonenumberValidationError = false;\n    let emailValidationError = false;\n\n    if (firstname.length === 0 || firstname === \"\") {\n      setFirstnameErrorMsg(\"Please insert a firstname\");\n      firstnameValiadtionError = true;\n    } else {\n      firstnameValiadtionError = false;\n      setFirstnameErrorMsg(\"\");\n    }\n\n    if (lastname.length === 0 || lastname === \"\") {\n      lastnameValidationError = true;\n      setLastnameErrorMsg(\"Please insert a lastname\");\n    } else {\n      lastnameValidationError = false;\n      setLastnameErrorMsg(\"\");\n    }\n\n    if (address.length === 0 || address === \"\") {\n      addressValidationError = true;\n      setAddressErrorMsg(\"Please insert an address\");\n    } else {\n      addressValidationError = false;\n      setAddressErrorMsg(\"\");\n    }\n\n    if (postcode.length === 0 || postcode === \"\") {\n      postcodeValidationError = true;\n      setPostcodeErrorMsg(\"Please insert a postcode\");\n    } else {\n      postcodeValidationError = false;\n      setPostcodeErrorMsg(\"\");\n    }\n\n    if (postarea.length === 0 || postarea === \"\") {\n      postareaValidationError = true;\n      setPostareaErrorMsg(\"Please insert a postarea\");\n    } else {\n      postareaValidationError = false;\n      setPostareaErrorMsg(\"\");\n    }\n\n    if (phonenumber.length === 0 || phonenumber === \"\") {\n      phonenumberValidationError = true;\n      setPhonenumberErrorMsg(\"Please insert a phonenumber\");\n    } else {\n      phonenumberValidationError = false;\n      setPhonenumberErrorMsg(\"\");\n    }\n\n    if (email.length === 0 || email === \"\") {\n      emailValidationError = true;\n      setEmailErrorMsg(\"Please insert an email address\");\n    } else {\n      emailValidationError = false;\n      setEmailErrorMsg(\"\");\n    }\n\n    if (firstnameValiadtionError === false && lastnameValidationError === false && addressValidationError === false && postcodeValidationError === false && postareaValidationError === false && phonenumberValidationError === false && emailValidationError === false) {\n      axiosUpdate();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: dialogOpen,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Edit info\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.formRoot,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    error: firstnameErrorMsg != \"\",\n    helperText: firstnameErrorMsg,\n    required: true,\n    id: \"firstname\",\n    label: \"Firstname\",\n    value: firstname,\n    onChange: e => {\n      setFirstname(e.target.value);\n      e.target.value.length === 0 ? setFirstnameErrorMsg(\"Please insert a firstname\") : setFirstnameErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: lastnameErrorMsg != \"\",\n    helperText: lastnameErrorMsg,\n    required: true,\n    id: \"lastname\",\n    label: \"Lastname\",\n    value: lastname,\n    onChange: e => {\n      setLastname(e.target.value);\n      e.target.value.length === 0 ? setLastnameErrorMsg(\"Please insert a lastname\") : setLastnameErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: addressErrorMsg != \"\",\n    helperText: addressErrorMsg,\n    required: true,\n    id: \"address\",\n    label: \"Address\",\n    value: address,\n    onChange: e => {\n      setAddress(e.target.value);\n      e.target.value.length === 0 ? setAddressErrorMsg(\"Please insert an address\") : setAddressErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: postcodeErrorMsg != \"\",\n    helperText: postcodeErrorMsg,\n    required: true,\n    id: \"postcode\",\n    label: \"Postcode\",\n    value: postcode,\n    onChange: e => {\n      setPostcode(e.target.value);\n      e.target.value.length === 0 ? setPostcodeErrorMsg(\"Please insert a postcode\") : setPostcodeErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: postareaErrorMsg != \"\",\n    helperText: postareaErrorMsg,\n    required: true,\n    id: \"postarea\",\n    label: \"Postarea\",\n    value: postarea,\n    onChange: e => {\n      setPostarea(e.target.value);\n      e.target.value.length === 0 ? setPostareaErrorMsg(\"Please insert a postarea\") : setPostareaErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: phonenumberErrorMsg != \"\",\n    helperText: phonenumberErrorMsg,\n    required: true,\n    id: \"phonenumber\",\n    label: \"Phonenumber\",\n    value: phonenumber,\n    onChange: e => {\n      setPhonenumber(e.target.value);\n      e.target.value.length === 0 ? setPhonenumberErrorMsg(\"Please insert a phonenumber\") : setPhonenumberErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: emailErrorMsg != \"\",\n    helperText: emailErrorMsg,\n    required: true,\n    id: \"email\",\n    label: \"Email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n      e.target.value.length === 0 ? setEmailErrorMsg(\"Please insert an email address\") : setEmailErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontWeight: 900,\n      fontSize: 14,\n      marginLeft: 155\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, serverErrorMsg), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleEditClicked(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleClose(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"Cancel\")))));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/pages/admin_tools/EditCustomerDialog.js"],"names":["React","useState","useEffect","TextField","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","NativeSelect","getToken","getUserId","axios","useStyles","theme","formRoot","margin","spacing","width","Infotxt","color","EditCustomerDialog","props","token","customerId","id","classes","customerInfo","setCustomerInfo","dialogOpen","setDialogOpen","firstname","setFirstname","firstnameErrorMsg","setFirstnameErrorMsg","lastname","setLastname","lastnameErrorMsg","setLastnameErrorMsg","address","setAddress","addressErrorMsg","setAddressErrorMsg","postcode","setPostcode","postcodeErrorMsg","setPostcodeErrorMsg","postarea","setPostarea","postareaErrorMsg","setPostareaErrorMsg","phonenumber","setPhonenumber","phonenumberErrorMsg","setPhonenumberErrorMsg","email","setEmail","emailErrorMsg","setEmailErrorMsg","serverErrorMsg","setServerErrorMsg","getCustomerInfo","get","headers","then","response","console","log","data","Persons","catch","error","edit","axiosUpdate","put","window","location","reload","msg","handleClose","handleEditClicked","firstnameValiadtionError","lastnameValidationError","addressValidationError","postcodeValidationError","postareaValidationError","phonenumberValidationError","emailValidationError","length","e","target","value","fontWeight","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport {getToken, getUserId} from '../../Utils/Common';\r\nimport axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formRoot: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        }\r\n    },\r\n    Infotxt: {\r\n        color: 'yellow',\r\n    }\r\n}));\r\n\r\nexport default function EditCustomerDialog(props) {\r\n\r\n    const token = getToken();\r\n    const customerId = props.id;\r\n    \r\n    const classes = useStyles();\r\n\r\n    const [customerInfo, setCustomerInfo] = useState([]);\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(true);\r\n\r\n    const [firstname, setFirstname] = useState(customerInfo[0].firstname);\r\n    const [firstnameErrorMsg, setFirstnameErrorMsg] = useState(\"\");\r\n\r\n    const [lastname, setLastname] = useState(customerInfo[0].lastname);\r\n    const [lastnameErrorMsg, setLastnameErrorMsg] = useState(\"\");\r\n\r\n    const [address, setAddress] = useState(customerInfo[0].address);\r\n    const [addressErrorMsg, setAddressErrorMsg] = useState(\"\");\r\n\r\n    const [postcode, setPostcode] = useState(customerInfo[0].postcode);\r\n    const [postcodeErrorMsg, setPostcodeErrorMsg] = useState(\"\");\r\n\r\n    const [postarea, setPostarea] = useState(customerInfo[0].postarea);\r\n    const [postareaErrorMsg, setPostareaErrorMsg] = useState(\"\");\r\n\r\n    const [phonenumber, setPhonenumber] = useState(customerInfo[0].phonenumber);\r\n    const [phonenumberErrorMsg, setPhonenumberErrorMsg] = useState(\"\");\r\n\r\n    const [email, setEmail] = useState(customerInfo[0].email);\r\n    const [emailErrorMsg, setEmailErrorMsg] = useState(\"\");\r\n\r\n    const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getCustomerInfo = () => {\r\n            axios.get(\"http://localhost:3001/person?id=\" +  customerId, {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n                .then(function (response) {\r\n                    console.log(response);\r\n                    setCustomerInfo(response.data.Persons);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        if (props.edit)\r\n        {\r\n        getCustomerInfo();\r\n        }\r\n    }, []);\r\n   \r\n    const axiosUpdate = () => {\r\n\r\n        axios.put('http://localhost:3001/person/'+ customerId,{ \r\n            firstname: firstname,\r\n            lastname: lastname,\r\n            address: address,\r\n            postcode: postcode,\r\n            postarea: postarea,\r\n            phonenumber: phonenumber,\r\n            email: email,\r\n        },{\r\n        headers: {\r\n            token: token\r\n          }})\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setDialogOpen(false);\r\n                window.location.reload(false);\r\n                props.edit(false);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                setServerErrorMsg(error.response.data.msg);\r\n            });\r\n\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setDialogOpen(false);\r\n        props.edit(false);\r\n      };\r\n      \r\n    const handleEditClicked = () => {\r\n\r\n        let firstnameValiadtionError = false;\r\n        let lastnameValidationError = false;\r\n        let addressValidationError = false;\r\n        let postcodeValidationError = false;\r\n        let postareaValidationError = false;\r\n        let phonenumberValidationError = false;\r\n        let emailValidationError = false;\r\n\r\n        if (firstname.length === 0 || firstname === \"\") {\r\n            setFirstnameErrorMsg(\"Please insert a firstname\");\r\n            firstnameValiadtionError = true;\r\n        }\r\n        else {\r\n            firstnameValiadtionError = false;\r\n            setFirstnameErrorMsg(\"\");\r\n        }\r\n        if (lastname.length === 0 || lastname === \"\") {\r\n            lastnameValidationError = true;\r\n            setLastnameErrorMsg(\"Please insert a lastname\");\r\n        }\r\n        else {\r\n            lastnameValidationError = false;\r\n            setLastnameErrorMsg(\"\");\r\n        }\r\n        if (address.length === 0 || address === \"\") {\r\n            addressValidationError = true;\r\n            setAddressErrorMsg(\"Please insert an address\");\r\n        }\r\n        else {\r\n            addressValidationError = false;\r\n            setAddressErrorMsg(\"\")\r\n        }\r\n        if (postcode.length === 0 || postcode === \"\") {\r\n            postcodeValidationError = true;\r\n            setPostcodeErrorMsg(\"Please insert a postcode\");\r\n        }\r\n        else {\r\n            postcodeValidationError = false;\r\n            setPostcodeErrorMsg(\"\");\r\n        }\r\n        if (postarea.length === 0 || postarea === \"\") {\r\n            postareaValidationError = true;\r\n            setPostareaErrorMsg(\"Please insert a postarea\");\r\n        }\r\n        else {\r\n            postareaValidationError = false;\r\n            setPostareaErrorMsg(\"\");\r\n        }\r\n        if (phonenumber.length === 0 || phonenumber === \"\") {\r\n            phonenumberValidationError = true;\r\n            setPhonenumberErrorMsg(\"Please insert a phonenumber\");\r\n        }\r\n        else {\r\n            phonenumberValidationError = false;\r\n            setPhonenumberErrorMsg(\"\");\r\n        }\r\n        if (email.length === 0 || email === \"\") {\r\n            emailValidationError = true;\r\n            setEmailErrorMsg(\"Please insert an email address\");\r\n        }\r\n        else {\r\n            emailValidationError = false;\r\n            setEmailErrorMsg(\"\");\r\n        }\r\n\r\n        if (firstnameValiadtionError === false && \r\n            lastnameValidationError === false &&\r\n            addressValidationError === false &&\r\n            postcodeValidationError === false &&\r\n            postareaValidationError === false &&\r\n            phonenumberValidationError === false &&\r\n            emailValidationError === false) {\r\n            axiosUpdate();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} onClose={handleClose}  aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit info</DialogTitle>\r\n                <DialogContent>\r\n                <form className={classes.formRoot} noValidate autoComplete=\"off\">\r\n                        <TextField error={firstnameErrorMsg != \"\"} helperText={firstnameErrorMsg} required id=\"firstname\" label=\"Firstname\" value={firstname}\r\n                            onChange={(e) => {\r\n                                setFirstname(e.target.value);\r\n                                (e.target.value.length === 0) ? setFirstnameErrorMsg(\"Please insert a firstname\") : setFirstnameErrorMsg(\"\")\r\n                            }} />\r\n\r\n                        <TextField error={lastnameErrorMsg != \"\"} helperText={lastnameErrorMsg} required id=\"lastname\" label=\"Lastname\" value={lastname}\r\n                            onChange={(e) => {\r\n                                setLastname(e.target.value);\r\n                                (e.target.value.length === 0) ? setLastnameErrorMsg(\"Please insert a lastname\") : setLastnameErrorMsg(\"\")\r\n                            }} />\r\n                        <br />\r\n\r\n                        <TextField error={addressErrorMsg != \"\"} helperText={addressErrorMsg} required id=\"address\" label=\"Address\" value={address}\r\n                            onChange={(e) => {\r\n                                setAddress(e.target.value);\r\n                                (e.target.value.length === 0) ? setAddressErrorMsg(\"Please insert an address\") : setAddressErrorMsg(\"\")\r\n                            }} />\r\n\r\n                        <TextField error={postcodeErrorMsg != \"\"} helperText={postcodeErrorMsg} required id=\"postcode\" label=\"Postcode\" value={postcode}\r\n                            onChange={(e) => {\r\n                                setPostcode(e.target.value);\r\n                                (e.target.value.length === 0) ? setPostcodeErrorMsg(\"Please insert a postcode\") : setPostcodeErrorMsg(\"\")\r\n                            }} />\r\n                        <br />\r\n                        <TextField error={postareaErrorMsg != \"\"} helperText={postareaErrorMsg} required id=\"postarea\" label=\"Postarea\" value={postarea}\r\n                            onChange={(e) => {\r\n                                setPostarea(e.target.value);\r\n                                (e.target.value.length === 0) ? setPostareaErrorMsg(\"Please insert a postarea\") : setPostareaErrorMsg(\"\")\r\n                            }} />\r\n                        <br />\r\n\r\n                        <TextField error={phonenumberErrorMsg != \"\"} helperText={phonenumberErrorMsg} required id=\"phonenumber\" label=\"Phonenumber\" value={phonenumber}\r\n                            onChange={(e) => {\r\n                                setPhonenumber(e.target.value);\r\n                                (e.target.value.length === 0) ? setPhonenumberErrorMsg(\"Please insert a phonenumber\") : setPhonenumberErrorMsg(\"\")\r\n                            }} />\r\n\r\n                        <TextField error={emailErrorMsg != \"\"} helperText={emailErrorMsg} required id=\"email\" label=\"Email\" value={email}\r\n                            onChange={(e) => {\r\n                                setEmail(e.target.value);\r\n                                (e.target.value.length === 0) ? setEmailErrorMsg(\"Please insert an email address\") : setEmailErrorMsg(\"\")\r\n                            }} />\r\n                    </form>\r\n              \r\n                </DialogContent>\r\n\r\n                <div>\r\n                <p style={{ color: \"red\", fontWeight: 900, fontSize: 14, marginLeft: 155}}>{serverErrorMsg}</p>\r\n\r\n                <DialogActions>\r\n                <Button variant=\"contained\" onClick={() => handleEditClicked()}>Edit</Button>\r\n                <Button variant=\"contained\" onClick={() => handleClose()}>Cancel</Button>\r\n                </DialogActions>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}