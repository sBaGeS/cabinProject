{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\pages\\\\searchCabins\\\\SearchCabins.js\";\nimport 'date-fns';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport TextField from '@material-ui/core/TextField';\nimport GetAgencies from '../../getAgencies/GetAgencies';\nimport CabinTable from '../../getCabins/CabinTable';\nconst useStyles = makeStyles(theme => ({\n  searchRoot: {\n    padding: '8px',\n    maxWidth: 600,\n    backgroundColor: 'navy',\n    color: 'white'\n  },\n  input: {\n    marginTop: 4,\n    marginLeft: 4,\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 4\n  },\n  datePicker: {\n    margin: '10px',\n    maxWidth: 500\n  },\n  divider: {\n    height: 40,\n    margin: 4\n  },\n  searchButton: {\n    margin: 4,\n    backgroundColor: 'white',\n    color: 'navy'\n  },\n  TextField: {\n    marginTop: 15,\n    marginLeft: 15,\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 4\n  }\n}));\nexport default function CabinSearchForm(props) {\n  const classes = useStyles();\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [agencyId, setAgencyId] = useState(\"\");\n  const [postarea, setPostarea] = useState(\"\");\n  const [minCapacity, setMinCapacity] = useState(\"\");\n  const [maxCapacity, setMaxCapacity] = useState(\"\");\n  const [minPrice, setMinPrice] = useState(\"\");\n  const [maxPrice, setMaxPrice] = useState(\"\");\n  const [minSize, setMinSize] = useState(\"\");\n  const [maxSize, setMaxSize] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [searchClicked, setSearchClicked] = useState(0);\n  let location = window.location.pathname;\n\n  const handleSearch = () => {\n    let query = \"\";\n\n    if (agencyId != \"\") {\n      query += \"agency_id=\" + agencyId + \"&\";\n    }\n\n    if (postarea != \"\") {\n      query += \"postarea=\" + postarea + \"&\";\n    }\n\n    if (minCapacity != \"\") {\n      query += \"min_capacity=\" + minCapacity + \"&\";\n    }\n\n    if (maxCapacity != \"\") {\n      query += \"max_capacity=\" + maxCapacity + \"&\";\n    }\n\n    if (minPrice != \"\") {\n      query += \"min_price=\" + minPrice + \"&\";\n    }\n\n    if (maxPrice != \"\") {\n      query += \"max_price=\" + maxPrice + \"&\";\n    }\n\n    if (minSize != \"\") {\n      query += \"min_size=\" + minSize + \"&\";\n    }\n\n    if (maxSize != \"\") {\n      query += \"max_size=\" + maxSize + \"&\";\n    }\n\n    setQuery(query);\n    setStartDate(startDate);\n    setEndDate(endDate);\n    setSearchClicked(searchClicked + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.searchRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Book your dream holiday today\"), React.createElement(GetAgencies, {\n    agencyId: agencyId,\n    setAgencyId: setAgencyId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.TextField,\n    type: \"text\",\n    id: \"postarea\",\n    label: \"Postarea\",\n    value: postarea,\n    onChange: e => setPostarea(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.TextField,\n    type: \"number\",\n    id: \"min_capacity\",\n    label: \"Min Capacity\",\n    value: minCapacity,\n    onChange: e => setMinCapacity(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.TextField,\n    type: \"number\",\n    id: \"max_capacity\",\n    label: \"Max Capacity\",\n    value: maxCapacity,\n    onChange: e => setMaxCapacity(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.TextField,\n    type: \"number\",\n    id: \"min_price\",\n    label: \"Min Price\",\n    value: minPrice,\n    onChange: e => setMinPrice(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.TextField,\n    type: \"number\",\n    id: \"max_price\",\n    label: \"Max Price\",\n    value: maxPrice,\n    onChange: e => setMaxPrice(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.TextField,\n    type: \"number\",\n    id: \"min_size\",\n    label: \"Min Size\",\n    value: minSize,\n    onChange: e => setMinSize(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.TextField,\n    type: \"number\",\n    id: \"max_size\",\n    label: \"Max Size\",\n    value: maxSize,\n    onChange: e => setMaxSize(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    className: classes.datePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"start_date\",\n    label: \"Check in\",\n    disablePast: \"true\",\n    value: startDate,\n    onChange: date => setStartDate(date),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"end_date\",\n    label: \"Check out\",\n    disablePast: \"true\",\n    value: endDate,\n    onChange: date => setEndDate(date),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    onClick: () => handleSearch(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Search\")), React.createElement(CabinTable, {\n    query: query,\n    startDate: startDate,\n    endDate: endDate,\n    searchClicked: searchClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/pages/searchCabins/SearchCabins.js"],"names":["React","useState","makeStyles","Paper","Link","Button","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","TextField","GetAgencies","CabinTable","useStyles","theme","searchRoot","padding","maxWidth","backgroundColor","color","input","marginTop","marginLeft","flex","borderRadius","datePicker","margin","divider","height","searchButton","CabinSearchForm","props","classes","startDate","setStartDate","Date","endDate","setEndDate","agencyId","setAgencyId","postarea","setPostarea","minCapacity","setMinCapacity","maxCapacity","setMaxCapacity","minPrice","setMinPrice","maxPrice","setMaxPrice","minSize","setMinSize","maxSize","setMaxSize","query","setQuery","searchClicked","setSearchClicked","location","window","pathname","handleSearch","e","target","value","date"],"mappings":"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","sourcesContent":["import 'date-fns';\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MuiPickersUtilsProvider,KeyboardDatePicker} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GetAgencies from '../../getAgencies/GetAgencies';\r\nimport CabinTable from '../../getCabins/CabinTable';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  searchRoot:{\r\n    padding: '8px',\r\n    maxWidth: 600,\r\n    backgroundColor: 'navy',\r\n    color: 'white'\r\n  } , \r\n    input: {\r\n      marginTop: 4,\r\n      marginLeft:4, \r\n      backgroundColor: 'white',\r\n      flex: 1,\r\n      borderRadius: 4\r\n    },\r\n    datePicker: {\r\n      margin: '10px',\r\n      maxWidth: 500\r\n    },\r\n    divider: {\r\n      height: 40,\r\n      margin: 4,\r\n    },\r\n    searchButton: {\r\n      margin: 4,\r\n      backgroundColor: 'white',\r\n      color: 'navy',\r\n    },\r\n    TextField: {\r\n        marginTop: 15,\r\n        marginLeft:15,\r\n        backgroundColor: 'white',\r\n        flex: 1,\r\n        borderRadius: 4\r\n      },\r\n  }));\r\nexport default function CabinSearchForm (props) {\r\n    const classes = useStyles();\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [agencyId, setAgencyId] = useState(\"\");\r\n    const [postarea, setPostarea] = useState(\"\");\r\n    const [minCapacity, setMinCapacity] = useState(\"\");\r\n    const [maxCapacity, setMaxCapacity] = useState(\"\");\r\n    const [minPrice, setMinPrice] = useState(\"\");\r\n    const [maxPrice, setMaxPrice] = useState(\"\");\r\n    const [minSize, setMinSize] = useState(\"\");\r\n    const [maxSize, setMaxSize] = useState(\"\");\r\n\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const [searchClicked, setSearchClicked] = useState(0);\r\n    \r\n    let location = window.location.pathname;\r\n   \r\n    const handleSearch = () => {\r\n     let query = \"\";\r\n\r\n     if(agencyId != \"\"){\r\n       query += \"agency_id=\" + agencyId+\"&\";\r\n     }\r\n     if(postarea != \"\"){\r\n        query += \"postarea=\" + postarea+\"&\";\r\n      }\r\n     if(minCapacity != \"\"){\r\n       query += \"min_capacity=\" + minCapacity+\"&\";\r\n     }\r\n     if(maxCapacity != \"\"){\r\n        query += \"max_capacity=\" + maxCapacity+\"&\";\r\n      }\r\n     if(minPrice != \"\"){\r\n        query += \"min_price=\" + minPrice+\"&\";\r\n      }\r\n     if(maxPrice != \"\"){\r\n         query += \"max_price=\" + maxPrice+\"&\";\r\n     }\r\n     if(minSize != \"\"){\r\n        query += \"min_size=\" + minSize+\"&\";\r\n      }\r\n     if(maxSize != \"\"){\r\n         query += \"max_size=\" + maxSize+\"&\";\r\n     }\r\n     setQuery(query);\r\n     setStartDate(startDate);\r\n     setEndDate(endDate);\r\n     setSearchClicked(searchClicked + 1);\r\n   }\r\n    return(\r\n        <div>\r\n          <Paper className = {classes.searchRoot}>\r\n            <h3>Book your dream holiday today</h3>\r\n              <GetAgencies agencyId = {agencyId} setAgencyId = {setAgencyId}/>\r\n              <TextField className = {classes.TextField} type=\"text\" id=\"postarea\" label=\"Postarea\" value={postarea}\r\n                    onChange={(e) => \r\n                        setPostarea(e.target.value)} />\r\n                        <br />\r\n              <TextField className = {classes.TextField} type=\"number\" id=\"min_capacity\" label=\"Min Capacity\" value={minCapacity}\r\n                    onChange={(e) => \r\n                        setMinCapacity(e.target.value)} />\r\n                        <TextField className = {classes.TextField} type=\"number\" id=\"max_capacity\" label=\"Max Capacity\" value={maxCapacity}\r\n                    onChange={(e) => \r\n                        setMaxCapacity(e.target.value)} />\r\n                        <br />\r\n                        <TextField className = {classes.TextField} type=\"number\" id=\"min_price\" label=\"Min Price\" value={minPrice}\r\n                    onChange={(e) => \r\n                        setMinPrice(e.target.value)} />\r\n                        <TextField className = {classes.TextField} type=\"number\" id=\"max_price\" label=\"Max Price\" value={maxPrice}\r\n                    onChange={(e) => \r\n                        setMaxPrice(e.target.value)} />\r\n                        <br />\r\n                        <TextField className = {classes.TextField} type=\"number\" id=\"min_size\" label=\"Min Size\" value={minSize}\r\n                    onChange={(e) => \r\n                        setMinSize(e.target.value)} />\r\n                        <TextField className = {classes.TextField} type=\"number\" id=\"max_size\" label=\"Max Size\" value={maxSize}\r\n                    onChange={(e) => \r\n                        setMaxSize(e.target.value)} />\r\n                        <br />\r\n            <Paper className = {classes.datePicker}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"dd/MM/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"start_date\"\r\n          label=\"Check in\"\r\n          disablePast = \"true\"\r\n          value={startDate}\r\n          onChange={(date) => setStartDate(date)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        \r\n         <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"dd/MM/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"end_date\"\r\n          label=\"Check out\"\r\n          disablePast = \"true\"\r\n          value={endDate}\r\n          onChange={(date) => setEndDate(date)}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n         </MuiPickersUtilsProvider><br/>\r\n         </Paper>\r\n         <Button  variant=\"contained\" className = {classes.searchButton} \r\n         onClick={() => handleSearch()}>Search</Button>\r\n         </Paper>\r\n         <CabinTable query={query} startDate={startDate} endDate={endDate} searchClicked={searchClicked}/>\r\n        </div>\r\n    )\r\n}\r\n            "]},"metadata":{},"sourceType":"module"}