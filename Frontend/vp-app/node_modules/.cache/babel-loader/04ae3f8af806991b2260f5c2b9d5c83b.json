{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\pages\\\\admin_tools\\\\CustomerTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport EditCustomerDialog from \"./EditCustomerDialog\";\nconst useStyles = makeStyles({\n  CustomerDiv: {\n    maxWidth: 1400,\n    paddingTop: 15\n  },\n  tableHeader: {\n    backgroundColor: 'orange'\n  },\n  tableHeaderCell: {\n    color: 'white'\n  },\n  editButton: {\n    margin: 4,\n    backgroundColor: 'navy',\n    color: 'white'\n  },\n  deleteButton: {\n    margin: 4,\n    backgroundColor: 'navy',\n    color: 'white'\n  }\n});\nexport default function CustomerTable(props) {\n  const style = useStyles();\n  const query = props.query;\n  const searchClicked = props.searchClicked;\n  const [customers, setCustomers] = useState([]);\n  const [id, setId] = useState(0);\n  const [edit, setEdit] = useState(false);\n  let dialog;\n  useEffect(() => {\n    const getCustomers = () => {\n      axios.get(\"http://localhost:3001/person?\" + query, {\n        headers: {\n          token: sessionStorage.getItem(\"token\")\n        }\n      }).then(function (response) {\n        console.log(response);\n        setCustomers(response.data.Persons);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    if (searchClicked > 0) {\n      getCustomers();\n    }\n  }, [searchClicked]);\n\n  if (edit) {\n    dialog = React.createElement(EditCustomerDialog, {\n      id: id,\n      edit: setEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    });\n  } else {\n    dialog = null;\n  }\n\n  if (searchClicked == 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      className: style.CustomerDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(TableContainer, {\n      component: Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: style.table,\n      \"aria-label\": \"customized table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      className: style.tableHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Id\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Firstname\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Lastname\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Address\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Postcode\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Postarea\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Phonenumber\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Email\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Username\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Role\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, customers.map((customer, i) => React.createElement(TableRow, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, customer.person_id), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, customer.firstname), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, customer.lastname), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, customer.address), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, customer.postcode), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, customer.postarea), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, customer.phonenumber), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, customer.email), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, customer.username), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, customer.role_id == 1 ? React.createElement(\"a\", {\n      style: {\n        color: \"red\",\n        fontWeight: 900\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Admin\") : \"Customer\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: style.editButton,\n      onClick: (() => edit ? setEdit(false) : setEdit(true), setId(customer.person_id)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Edit\")), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: style.deleteButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Delete\"))))))), dialog);\n  }\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/pages/admin_tools/CustomerTable.js"],"names":["React","useState","useEffect","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","EditCustomerDialog","useStyles","CustomerDiv","maxWidth","paddingTop","tableHeader","backgroundColor","tableHeaderCell","color","editButton","margin","deleteButton","CustomerTable","props","style","query","searchClicked","customers","setCustomers","id","setId","edit","setEdit","dialog","getCustomers","get","headers","token","sessionStorage","getItem","then","response","console","log","data","Persons","catch","error","table","map","customer","i","person_id","firstname","lastname","address","postcode","postarea","phonenumber","email","username","role_id","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport EditCustomerDialog from \"./EditCustomerDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n    CustomerDiv: {\r\n        maxWidth: 1400,\r\n        paddingTop: 15,\r\n    },\r\n    tableHeader: {\r\n        backgroundColor: 'orange',\r\n    },\r\n    tableHeaderCell: {\r\n        color: 'white'\r\n    },\r\n    editButton: {\r\n        margin: 4,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n    },\r\n    deleteButton: {\r\n        margin: 4,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n    },\r\n\r\n});\r\n\r\nexport default function CustomerTable(props) {\r\n\r\n    const style = useStyles();\r\n\r\n\r\n    const query = props.query;\r\n    const searchClicked = props.searchClicked;\r\n    const [customers, setCustomers] = useState([]);\r\n\r\n    const [id, setId] = useState(0);\r\n\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    let dialog;\r\n\r\n    useEffect(() => {\r\n        const getCustomers = () => {\r\n            axios.get(\"http://localhost:3001/person?\" + query, {\r\n                headers: {\r\n                    token: sessionStorage.getItem(\"token\")\r\n                }\r\n            })\r\n                .then(function (response) {\r\n                    console.log(response);\r\n                    setCustomers(response.data.Persons);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        if (searchClicked > 0)\r\n        {\r\n        getCustomers();\r\n        }\r\n    }, [searchClicked]);\r\n\r\n    if(edit)\r\n    {\r\n        dialog = <EditCustomerDialog id = {id} edit = {setEdit}/>;\r\n    }\r\n    else\r\n    {\r\n        dialog = null;\r\n    }\r\n\r\n    if (searchClicked == 0) {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n<div className={style.CustomerDiv}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={style.table} aria-label=\"customized table\">\r\n                        <TableHead className={style.tableHeader}>\r\n                            <TableRow>\r\n                                <TableCell className={style.tableHeaderCell}>Id</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Firstname</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Lastname</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Address</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Postcode</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Postarea</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Phonenumber</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Email</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Username</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Role</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Edit</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Delete</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {customers.map((customer, i) => <TableRow key={i}>\r\n                                <TableCell>{customer.person_id}</TableCell>\r\n                                <TableCell align=\"right\">{customer.firstname}</TableCell>\r\n                                <TableCell align=\"right\">{customer.lastname}</TableCell>\r\n                                <TableCell align=\"right\">{customer.address}</TableCell>\r\n                                <TableCell align=\"right\">{customer.postcode}</TableCell>\r\n                                <TableCell align=\"right\">{customer.postarea}</TableCell>\r\n                                <TableCell align=\"right\">{customer.phonenumber}</TableCell>\r\n                                <TableCell align=\"right\">{customer.email}</TableCell>\r\n                                <TableCell align=\"right\">{customer.username}</TableCell>\r\n                                <TableCell align=\"right\">{customer.role_id == 1 ? <a style={{ color: \"red\", fontWeight: 900}}>Admin</a> : \"Customer\"}</TableCell>\r\n                                <TableCell align=\"right\"><Button  className={style.editButton}  onClick={() => edit ? setEdit(false) : setEdit(true), setId(customer.person_id)}>Edit</Button></TableCell>\r\n                                <TableCell align=\"right\"><Button  className={style.deleteButton}>Delete</Button></TableCell>\r\n                            </TableRow>)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {dialog}\r\n        </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}