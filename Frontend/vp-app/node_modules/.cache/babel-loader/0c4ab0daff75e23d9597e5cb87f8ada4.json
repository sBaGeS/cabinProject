{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\postServiceReservation\\\\PostServiceReservationDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Box from '@material-ui/core/Box';\nimport axios from 'axios';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Typography } from '@material-ui/core';\nimport { getUserId, getToken } from '../../Utils/Common';\nimport dateFormat from 'dateformat';\nexport default function PostServiceReservation(props) {\n  const defaultProps = {\n    bgcolor: 'background.paper',\n    m: 1,\n    border: 2,\n    padding: 2,\n    borderRadius: 16\n  };\n  const [dialogOpen, setDialogOpen] = useState(true);\n  const user = getUserId();\n  const token = getToken();\n  const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\n  const [reservationDate, setReservationDate] = useState(new Date());\n  const [bookedMsg, setBookedMsg] = useState(\"\");\n\n  const axiosPostServiceReservation = () => {\n    axios.post(\"http://localhost:3001/serviceReservation/\", {\n      service_id: props.service_id,\n      person_id: user,\n      reservationdate: reservationDate,\n      price: props.price\n    }, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setServerErrorMsg(\"\");\n      setBookedMsg(\"Service booked\");\n      setTimeout(() => {\n        setDialogOpen(false);\n      }, 3000);\n    }).catch(function (error) {\n      console.log(error.response);\n      setServerErrorMsg(error.response.data.msg);\n      setTimeout(() => {\n        setServerErrorMsg(\"\");\n      }, 3000);\n    });\n  };\n\n  const handleClose = () => {\n    setDialogOpen(false);\n    props.book(false);\n  };\n\n  const handleBookClicked = () => {\n    axiosPostServiceReservation();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: dialogOpen,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Reserve service\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"You are reserving \", React.createElement(\"span\", {\n    style: {\n      fontWeight: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.service), \".\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Please select date below\"), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"reservation_date\",\n    label: \"Date\",\n    disablePast: \"true\",\n    value: reservationDate,\n    onChange: date => setReservationDate(dateFormat(date, \"yyyy-mm-dd\")),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontWeight: 900,\n      fontSize: 17,\n      marginLeft: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, serverErrorMsg), React.createElement(\"p\", {\n    style: {\n      color: \"green\",\n      fontWeight: 900,\n      fontSize: 17,\n      marginLeft: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, bookedMsg), React.createElement(Box, Object.assign({\n    borderColor: \"darkgreen\"\n  }, defaultProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      color: \"navy\",\n      fontWeight: 900,\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Total price: \", props.price, \"\\u20AC\"))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleBookClicked(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Book\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleClose(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Cancel\"))));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/postServiceReservation/PostServiceReservationDialog.js"],"names":["React","useState","useEffect","Button","Dialog","DialogActions","DialogContent","DialogTitle","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","Box","axios","FormControl","Typography","getUserId","getToken","dateFormat","PostServiceReservation","props","defaultProps","bgcolor","m","border","padding","borderRadius","dialogOpen","setDialogOpen","user","token","serverErrorMsg","setServerErrorMsg","reservationDate","setReservationDate","Date","bookedMsg","setBookedMsg","axiosPostServiceReservation","post","service_id","person_id","reservationdate","price","headers","then","response","console","log","setTimeout","catch","error","data","msg","handleClose","book","handleBookClicked","fontWeight","service","date","color","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Typography } from '@material-ui/core';\r\nimport { getUserId, getToken } from '../../Utils/Common';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function PostServiceReservation(props) {\r\n\r\n    const defaultProps = {\r\n        bgcolor: 'background.paper',\r\n        m: 1,\r\n        border: 2,\r\n        padding: 2,\r\n        borderRadius: 16\r\n    };\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(true);\r\n    const user = getUserId();\r\n    const token = getToken();\r\n    const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\r\n    const [reservationDate, setReservationDate] = useState(new Date());\r\n    const [bookedMsg, setBookedMsg] = useState(\"\");\r\n\r\n\r\n\r\n    const axiosPostServiceReservation = () => {\r\n        axios.post(\"http://localhost:3001/serviceReservation/\", {\r\n            service_id: props.service_id,\r\n            person_id: user,\r\n            reservationdate: reservationDate,\r\n            price: props.price,\r\n        },\r\n            {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setServerErrorMsg(\"\");\r\n                setBookedMsg(\"Service booked\")\r\n                setTimeout(() => {\r\n                    setDialogOpen(false);\r\n                }, 3000);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                setServerErrorMsg(error.response.data.msg);\r\n                setTimeout(() => {\r\n                    setServerErrorMsg(\"\");\r\n                }, 3000);\r\n            });\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setDialogOpen(false);\r\n        props.book(false);\r\n    };\r\n    const handleBookClicked = () => {\r\n        axiosPostServiceReservation();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Reserve service</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography>\r\n                        You are reserving <span style={{ fontWeight: 900 }}>{props.service}</span>.<br />\r\n                    </Typography>\r\n\r\n                    <Typography>\r\n                        Please select date below\r\n                    </Typography>\r\n                    <FormControl>\r\n                        <br />\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                margin=\"normal\"\r\n                                id=\"reservation_date\"\r\n                                label=\"Date\"\r\n                                disablePast=\"true\"\r\n                                value={reservationDate}\r\n                                onChange={(date) => setReservationDate(dateFormat(date, \"yyyy-mm-dd\"))}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </FormControl>\r\n                    <p style={{ color: \"red\", fontWeight: 900, fontSize: 17, marginLeft: 40 }}>{serverErrorMsg}</p>\r\n                    <p style={{ color: \"green\", fontWeight: 900, fontSize: 17, marginLeft: 40 }}>{bookedMsg}</p>\r\n                    <Box borderColor=\"darkgreen\" {...defaultProps}>\r\n                        <p style={{ color: \"navy\", fontWeight: 900, fontSize: 16}}>Total price: {props.price}€</p>\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" onClick={() => handleBookClicked()}>Book</Button>\r\n                    <Button variant=\"contained\" onClick={() => handleClose()}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}