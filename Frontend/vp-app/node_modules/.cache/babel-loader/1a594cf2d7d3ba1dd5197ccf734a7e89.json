{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\postServiceReservation\\\\PostServiceReservationDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Box from '@material-ui/core/Box';\nimport axios from 'axios';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Typography } from '@material-ui/core';\nimport { getUserId, getToken } from '../../Utils/Common';\nimport dateFormat from 'dateformat';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nexport default function PostServiceReservation(props) {\n  const defaultProps = {\n    bgcolor: 'background.paper',\n    m: 1,\n    border: 2,\n    padding: 2,\n    borderRadius: 16\n  };\n  const [dialogOpen, setDialogOpen] = useState(true);\n  const user = getUserId();\n  const token = getToken();\n  const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\n  const [reservationDate, setReservationDate] = useState(new Date());\n  const [bookedMsg, setBookedMsg] = useState(\"\");\n  const [invoice, setInvoice] = useState(\"\");\n  const [invoiceErrorMsg, setInvoiceErrorMsg] = useState(\"\");\n\n  const axiosPostServiceReservation = () => {\n    axios.post(\"http://localhost:3001/serviceReservation/\", {\n      service_id: props.service_id,\n      person_id: user,\n      reservationdate: reservationDate,\n      price: props.price,\n      invoice: invoice\n    }, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setServerErrorMsg(\"\");\n      setBookedMsg(\"Service booked\");\n      setTimeout(() => {\n        setDialogOpen(false);\n      }, 3000);\n    }).catch(function (error) {\n      console.log(error.response);\n      setServerErrorMsg(error.response.data.msg);\n      setTimeout(() => {\n        setServerErrorMsg(\"\");\n      }, 3000);\n    });\n  };\n\n  const handleClose = () => {\n    setDialogOpen(false);\n    props.book(false);\n  };\n\n  const handleBookClicked = () => {\n    let invoiceValidationError;\n\n    if (invoice == 2) {\n      setInvoiceErrorMsg(\"Please select an invoice type\");\n      invoiceValidationError = true;\n    } else {\n      invoiceValidationError = false;\n      setInvoiceErrorMsg(\"\");\n    }\n\n    if (!invoiceValidationError) {\n      axiosPostServiceReservation();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: dialogOpen,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Reserve service\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"You are reserving \", React.createElement(\"span\", {\n    style: {\n      fontWeight: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, props.service), \".\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Please select date below\"), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"reservation_date\",\n    label: \"Date\",\n    disablePast: \"true\",\n    value: reservationDate,\n    onChange: date => setReservationDate(dateFormat(date, \"yyyy-mm-dd\")),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(NativeSelect, {\n    required: true,\n    id: \"invoice\",\n    label: \"Invoice\",\n    error: invoiceErrorMsg != \"\",\n    helperText: invoiceErrorMsg,\n    defaultValue: \"2\",\n    onChange: e => {\n      setInvoice(parseInt(e.target.value, 10));\n      e.target.value == 2 ? setInvoiceErrorMsg(\"Please select invoice type\") : setInvoiceErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    disabled: true,\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Invoice type\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Letter\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontWeight: 900,\n      fontSize: 17,\n      marginLeft: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, serverErrorMsg), React.createElement(\"p\", {\n    style: {\n      color: \"green\",\n      fontWeight: 900,\n      fontSize: 17,\n      marginLeft: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, bookedMsg), React.createElement(Box, Object.assign({\n    borderColor: \"darkgreen\"\n  }, defaultProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      color: \"navy\",\n      fontWeight: 900,\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Total price: \", props.price, \"\\u20AC\"))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleBookClicked(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Book\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleClose(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Cancel\"))));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/postServiceReservation/PostServiceReservationDialog.js"],"names":["React","useState","useEffect","Button","Dialog","DialogActions","DialogContent","DialogTitle","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","Box","axios","FormControl","Typography","getUserId","getToken","dateFormat","NativeSelect","PostServiceReservation","props","defaultProps","bgcolor","m","border","padding","borderRadius","dialogOpen","setDialogOpen","user","token","serverErrorMsg","setServerErrorMsg","reservationDate","setReservationDate","Date","bookedMsg","setBookedMsg","invoice","setInvoice","invoiceErrorMsg","setInvoiceErrorMsg","axiosPostServiceReservation","post","service_id","person_id","reservationdate","price","headers","then","response","console","log","setTimeout","catch","error","data","msg","handleClose","book","handleBookClicked","invoiceValidationError","fontWeight","service","date","e","parseInt","target","value","color","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Typography } from '@material-ui/core';\r\nimport { getUserId, getToken } from '../../Utils/Common';\r\nimport dateFormat from 'dateformat';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nexport default function PostServiceReservation(props) {\r\n\r\n    const defaultProps = {\r\n        bgcolor: 'background.paper',\r\n        m: 1,\r\n        border: 2,\r\n        padding: 2,\r\n        borderRadius: 16\r\n    };\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(true);\r\n    const user = getUserId();\r\n    const token = getToken();\r\n    const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\r\n    const [reservationDate, setReservationDate] = useState(new Date());\r\n    const [bookedMsg, setBookedMsg] = useState(\"\");\r\n    const [invoice, setInvoice] = useState(\"\");\r\n    const [invoiceErrorMsg, setInvoiceErrorMsg]= useState(\"\");\r\n\r\n\r\n\r\n    const axiosPostServiceReservation = () => {\r\n        axios.post(\"http://localhost:3001/serviceReservation/\", {\r\n            service_id: props.service_id,\r\n            person_id: user,\r\n            reservationdate: reservationDate,\r\n            price: props.price,\r\n            invoice: invoice,\r\n        },\r\n            {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setServerErrorMsg(\"\");\r\n                setBookedMsg(\"Service booked\")\r\n                setTimeout(() => {\r\n                    setDialogOpen(false);\r\n                }, 3000);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                setServerErrorMsg(error.response.data.msg);\r\n                setTimeout(() => {\r\n                    setServerErrorMsg(\"\");\r\n                }, 3000);\r\n            });\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setDialogOpen(false);\r\n        props.book(false);\r\n    };\r\n    const handleBookClicked = () => {\r\n        let invoiceValidationError;\r\n\r\n        if (invoice == 2) {\r\n            setInvoiceErrorMsg(\"Please select an invoice type\");\r\n            invoiceValidationError = true;\r\n        }\r\n        else {\r\n            invoiceValidationError = false;\r\n            setInvoiceErrorMsg(\"\");\r\n        }\r\n        if (!invoiceValidationError) {\r\n            axiosPostServiceReservation();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Reserve service</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography>\r\n                        You are reserving <span style={{ fontWeight: 900 }}>{props.service}</span>.<br />\r\n                    </Typography>\r\n\r\n                    <Typography>\r\n                        Please select date below\r\n                    </Typography>\r\n                    <FormControl>\r\n                        <br />\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                margin=\"normal\"\r\n                                id=\"reservation_date\"\r\n                                label=\"Date\"\r\n                                disablePast=\"true\"\r\n                                value={reservationDate}\r\n                                onChange={(date) => setReservationDate(dateFormat(date, \"yyyy-mm-dd\"))}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <NativeSelect\r\n                            required id=\"invoice\" label=\"Invoice\" error={invoiceErrorMsg != \"\"} helperText={invoiceErrorMsg} defaultValue=\"2\"\r\n                            onChange={(e) => {\r\n                                setInvoice(parseInt(e.target.value, 10));\r\n                                (e.target.value == 2) ? setInvoiceErrorMsg(\"Please select invoice type\") : setInvoiceErrorMsg(\"\")\r\n                            }}>\r\n                            <option disabled value=\"2\">Invoice type</option>\r\n                            <option value=\"1\">Email</option>\r\n                            <option value=\"0\">Letter</option>\r\n                        </NativeSelect>\r\n                        <br />\r\n\r\n                    </FormControl>\r\n                    <p style={{ color: \"red\", fontWeight: 900, fontSize: 17, marginLeft: 40 }}>{serverErrorMsg}</p>\r\n                    <p style={{ color: \"green\", fontWeight: 900, fontSize: 17, marginLeft: 40 }}>{bookedMsg}</p>\r\n                    <Box borderColor=\"darkgreen\" {...defaultProps}>\r\n                        <p style={{ color: \"navy\", fontWeight: 900, fontSize: 16 }}>Total price: {props.price}€</p>\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" onClick={() => handleBookClicked()}>Book</Button>\r\n                    <Button variant=\"contained\" onClick={() => handleClose()}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}