{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\Utils\\\\AdminRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken, getAdmin } from '../Utils/Common';\nexport default function AdminRoute({\n  component: Component,\n  logged,\n  ...rest\n}) {\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => getToken() && getAdmin() ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/Utils/AdminRoute.js"],"names":["React","Route","Redirect","getToken","getAdmin","AdminRoute","component","Component","logged","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,iBAAjC;AAGA,eAAe,SAASC,UAAT,CAAqB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,MAAvB;AAA+B,KAAGC;AAAlC,CAArB,EAA8D;AACzE,SACI,oBAAC,KAAD,oBACIA,IADJ;AAEA,IAAA,MAAM,EAAKC,KAAD,IAAWP,QAAQ,MAAMC,QAAQ,EAAtB,GACnB,oBAAC,SAAD,oBAAeM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADmB,GAEpB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAI;AAACC,QAAAA,QAAQ,EAAE,GAAX;AAAgBC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAAvB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAQH","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {getToken, getAdmin} from '../Utils/Common'\r\n\r\n\r\nexport default function AdminRoute ({component: Component, logged, ...rest}) {\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render = {(props) => getToken() && getAdmin()\r\n        ? <Component {...props}/>\r\n        :<Redirect to = {{pathname: '/', state: {from: props.location}}}/>}\r\n        />\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}