{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\postService\\\\PostServiceForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Box from '@material-ui/core/Box';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  searchButton: {\n    margin: 20,\n    backgroundColor: 'navy',\n    color: 'white'\n  },\n  formRoot: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 2,\n  padding: 2,\n  borderRadius: 16,\n  borderColor: 'navy'\n};\nexport default function PostServiceForm() {\n  const token = sessionStorage.getItem('token');\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [nameErrorMsg, setNameErrorMsg] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [priceErrorMsg, setPriceErrorMsg] = useState(\"\");\n  const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\n  const [postCompletedMessage, setPostCompletedMessage] = useState(\"\");\n\n  const axiosPostService = () => {\n    axios.post('http://localhost:3001/service', {\n      name: name,\n      price: price\n    }, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setPostCompletedMessage(\"Service \" + name + \" posted\");\n      resetTextFields();\n    }).catch(function (error) {\n      console.log(error.response);\n      setServerErrorMsg(error.response.data.msg);\n    });\n  };\n\n  const resetTextFields = () => {\n    setName(\"\");\n    setPrice(\"\");\n  };\n\n  const handlePostClicked = () => {\n    let nameValidationError = false;\n    let priceValidationError = false;\n\n    if (name.length === 0 || name === \"\") {\n      setNameErrorMsg(\"Please insert an service name\");\n      nameValidationError = true;\n    } else {\n      nameValidationError = false;\n      setNameErrorMsg(\"\");\n    }\n\n    if (price == \"\") {\n      setPriceErrorMsg(\"Please insert a price\");\n      priceValidationError = true;\n    } else {\n      priceValidationError = false;\n      setPriceErrorMsg(\"\");\n    }\n\n    if (!nameValidationError && !priceValidationError) {\n      axiosPostService();\n    }\n  };\n\n  return React.createElement(Box, Object.assign({\n    borderColor: \"navy\"\n  }, defaultProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: classes.formRoot,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Add an service\"), React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: nameErrorMsg != \"\",\n    helperText: nameErrorMsg,\n    required: true,\n    id: \"name\",\n    label: \"Service name\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n      e.target.value.length === 0 ? setNameErrorMsg(\"Please insert an agency name\") : setNameErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: priceErrorMsg != \"\",\n    helperText: priceErrorMsg,\n    id: \"price\",\n    label: \"Price\",\n    type: \"number\",\n    required: true,\n    value: price,\n    onChange: e => {\n      setPrice(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    onClick: () => handlePostClicked(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontWeight: 900,\n      fontSize: 16,\n      marginLeft: 130\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, serverErrorMsg)), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, postCompletedMessage));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/postService/PostServiceForm.js"],"names":["React","useState","useEffect","TextField","makeStyles","Button","NativeSelect","FormHelperText","Box","axios","useStyles","theme","searchButton","margin","backgroundColor","color","formRoot","spacing","width","formControl","minWidth","defaultProps","bgcolor","m","border","padding","borderRadius","borderColor","PostServiceForm","token","sessionStorage","getItem","classes","name","setName","nameErrorMsg","setNameErrorMsg","price","setPrice","priceErrorMsg","setPriceErrorMsg","serverErrorMsg","setServerErrorMsg","postCompletedMessage","setPostCompletedMessage","axiosPostService","post","headers","then","response","console","log","resetTextFields","catch","error","data","msg","handlePostClicked","nameValidationError","priceValidationError","length","display","e","target","value","fontWeight","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    searchButton: {\r\n        margin: 20,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n    },\r\n    formRoot: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n\r\n            width: '25ch',\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n\r\n        minWidth: 120,\r\n    },\r\n\r\n}));\r\nconst defaultProps = {\r\n    bgcolor: 'background.paper',\r\n    m: 1,\r\n    border: 2,\r\n    padding: 2,\r\n    borderRadius: 16,\r\n    borderColor: 'navy'\r\n\r\n};\r\n\r\nexport default function PostServiceForm() {\r\n\r\n    const token = sessionStorage.getItem('token');\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [nameErrorMsg, setNameErrorMsg] = useState(\"\");\r\n\r\n    const [price, setPrice] = useState(\"\");\r\n    const [priceErrorMsg, setPriceErrorMsg] = useState(\"\");\r\n\r\n    const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\r\n    const [postCompletedMessage, setPostCompletedMessage] = useState(\"\")\r\n\r\n\r\n    const axiosPostService = () => {\r\n        axios.post('http://localhost:3001/service', {\r\n            name: name,\r\n            price: price\r\n        },\r\n            {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setPostCompletedMessage(\"Service \" + name + \" posted\");\r\n                resetTextFields();\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                setServerErrorMsg(error.response.data.msg);\r\n            });\r\n    }\r\n\r\n    const resetTextFields = () => {\r\n        setName(\"\");\r\n        setPrice(\"\");\r\n    }\r\n\r\n    const handlePostClicked = () => {\r\n\r\n        let nameValidationError = false;\r\n        let priceValidationError = false;\r\n\r\n        if (name.length === 0 || name === \"\") {\r\n            setNameErrorMsg(\"Please insert an service name\");\r\n            nameValidationError = true;\r\n        }\r\n        else {\r\n            nameValidationError = false;\r\n            setNameErrorMsg(\"\");\r\n        }\r\n\r\n        if (price == \"\") {\r\n            setPriceErrorMsg(\"Please insert a price\");\r\n            priceValidationError = true;\r\n        }\r\n        else {\r\n            priceValidationError = false;\r\n            setPriceErrorMsg(\"\");\r\n        }\r\n\r\n        if (!nameValidationError && !priceValidationError) {\r\n            axiosPostService();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box borderColor=\"navy\" {...defaultProps}>\r\n            <form className={classes.formRoot} noValidate autoComplete=\"off\">\r\n                <h2>Add an service</h2>\r\n                <div style={{display: \"flex\"}}>\r\n                <div>\r\n                <br />\r\n                <TextField error={nameErrorMsg != \"\"} helperText={nameErrorMsg} required id=\"name\" label=\"Service name\" value={name}\r\n                    onChange={(e) => {\r\n                        setName(e.target.value);\r\n                        (e.target.value.length === 0) ? setNameErrorMsg(\"Please insert an agency name\") : setNameErrorMsg(\"\")\r\n                    }} />\r\n\r\n                <TextField error={priceErrorMsg != \"\"} helperText={priceErrorMsg} id=\"price\" label=\"Price\" type=\"number\" required value={price}\r\n                    onChange={(e) => {\r\n                        setPrice(e.target.value);\r\n                    }} />\r\n                <br />\r\n                    </div>\r\n                    </div>\r\n            </form>\r\n            <div>\r\n            <Button variant=\"contained\" className={classes.searchButton} onClick={() => handlePostClicked()}>Submit</Button>\r\n            <p style={{ color: \"red\", fontWeight: 900, fontSize: 16, marginLeft: 130}}>{serverErrorMsg}</p>\r\n            </div>\r\n            <h4>{postCompletedMessage}</h4>\r\n        </Box>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}