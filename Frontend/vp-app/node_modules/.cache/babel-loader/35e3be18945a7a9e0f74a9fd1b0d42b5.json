{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\postService\\\\PostServiceForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport GetAgencies from '../getAgencies/GetAgencies';\nimport Box from '@material-ui/core/Box';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  searchButton: {\n    margin: 20,\n    backgroundColor: 'navy',\n    color: 'white'\n  },\n  formRoot: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 2,\n  padding: 2,\n  borderRadius: 16,\n  borderColor: 'navy'\n};\nexport default function PostServiceForm() {\n  const token = sessionStorage.getItem('token');\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [nameErrorMsg, setNameErrorMsg] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [priceErrorMsg, setPriceErrorMsg] = useState(\"\");\n  const [agencyId, setAgencyId] = useState(\"\");\n  const [agencyIdErrorMsg, setAgencyIdErrorMsg] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n  const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\n  const [postCompletedMessage, setPostCompletedMessage] = useState(\"\");\n\n  const axiosPostService = () => {\n    axios.post('http://localhost:3001/service', {\n      name: name,\n      price: price,\n      agency_id: agencyId,\n      info: info\n    }, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setPostCompletedMessage(\"Service \" + name + \" posted\");\n      resetTextFields();\n    }).catch(function (error) {\n      console.log(error.response);\n      setServerErrorMsg(error.response.data.msg);\n    });\n  };\n\n  const resetTextFields = () => {\n    setName(\"\");\n    setPrice(\"\");\n  };\n\n  const handlePostClicked = () => {\n    let nameValidationError = false;\n    let priceValidationError = false;\n    let agencyValidationerror = false;\n\n    if (name.length === 0 || name === \"\") {\n      setNameErrorMsg(\"Please insert an service name\");\n      nameValidationError = true;\n    } else {\n      nameValidationError = false;\n      setNameErrorMsg(\"\");\n    }\n\n    if (price == \"\") {\n      setPriceErrorMsg(\"Please insert a price\");\n      priceValidationError = true;\n    } else {\n      priceValidationError = false;\n      setPriceErrorMsg(\"\");\n    }\n\n    if (agencyId == \"\") {\n      setAgencyIdErrorMsg(\"Please select an agency\");\n      agencyValidationerror = true;\n    } else {\n      setAgencyIdErrorMsg(\"\");\n      agencyValidationerror = false;\n    }\n\n    if (!nameValidationError && !priceValidationError && !agencyValidationerror) {\n      axiosPostService();\n    }\n  };\n\n  return React.createElement(Box, Object.assign({\n    borderColor: \"navy\"\n  }, defaultProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: classes.formRoot,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Add an service\"), React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(GetAgencies, {\n    agencyId: agencyId,\n    setAgencyId: setAgencyId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: nameErrorMsg != \"\",\n    helperText: nameErrorMsg,\n    required: true,\n    id: \"name\",\n    label: \"Service name\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n      e.target.value.length === 0 ? setNameErrorMsg(\"Please insert an agency name\") : setNameErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: priceErrorMsg != \"\",\n    helperText: priceErrorMsg,\n    id: \"price\",\n    label: \"Price\",\n    type: \"number\",\n    required: true,\n    value: price,\n    onChange: e => {\n      setPrice(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: 30,\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    multiline: true,\n    rows: \"12\",\n    id: \"info\",\n    label: \"Information\",\n    value: info,\n    onChange: e => {\n      setInfo(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    onClick: () => handlePostClicked(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontWeight: 900,\n      fontSize: 16,\n      marginLeft: 130\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, serverErrorMsg)), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, postCompletedMessage));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/postService/PostServiceForm.js"],"names":["React","useState","useEffect","TextField","makeStyles","Button","GetAgencies","Box","axios","useStyles","theme","searchButton","margin","backgroundColor","color","formRoot","spacing","width","formControl","minWidth","defaultProps","bgcolor","m","border","padding","borderRadius","borderColor","PostServiceForm","token","sessionStorage","getItem","classes","name","setName","nameErrorMsg","setNameErrorMsg","price","setPrice","priceErrorMsg","setPriceErrorMsg","agencyId","setAgencyId","agencyIdErrorMsg","setAgencyIdErrorMsg","info","setInfo","serverErrorMsg","setServerErrorMsg","postCompletedMessage","setPostCompletedMessage","axiosPostService","post","agency_id","headers","then","response","console","log","resetTextFields","catch","error","data","msg","handlePostClicked","nameValidationError","priceValidationError","agencyValidationerror","length","display","e","target","value","marginTop","marginLeft","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport GetAgencies from '../getAgencies/GetAgencies';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    searchButton: {\r\n        margin: 20,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n    },\r\n    formRoot: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n\r\n            width: '25ch',\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n\r\n        minWidth: 120,\r\n    },\r\n\r\n}));\r\nconst defaultProps = {\r\n    bgcolor: 'background.paper',\r\n    m: 1,\r\n    border: 2,\r\n    padding: 2,\r\n    borderRadius: 16,\r\n    borderColor: 'navy'\r\n\r\n};\r\n\r\nexport default function PostServiceForm() {\r\n\r\n    const token = sessionStorage.getItem('token');\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [nameErrorMsg, setNameErrorMsg] = useState(\"\");\r\n\r\n    const [price, setPrice] = useState(\"\");\r\n    const [priceErrorMsg, setPriceErrorMsg] = useState(\"\");\r\n\r\n    const [agencyId, setAgencyId] = useState(\"\");\r\n    const [agencyIdErrorMsg, setAgencyIdErrorMsg] = useState(\"\");\r\n\r\n    const [info, setInfo] = useState(\"\");\r\n\r\n    const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\r\n    const [postCompletedMessage, setPostCompletedMessage] = useState(\"\")\r\n\r\n\r\n    const axiosPostService = () => {\r\n        axios.post('http://localhost:3001/service', {\r\n            name: name,\r\n            price: price,\r\n            agency_id: agencyId,\r\n            info: info,\r\n        },\r\n            {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setPostCompletedMessage(\"Service \" + name + \" posted\");\r\n                resetTextFields();\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                setServerErrorMsg(error.response.data.msg);\r\n            });\r\n    }\r\n\r\n    const resetTextFields = () => {\r\n        setName(\"\");\r\n        setPrice(\"\");\r\n    }\r\n\r\n    const handlePostClicked = () => {\r\n\r\n        let nameValidationError = false;\r\n        let priceValidationError = false;\r\n        let agencyValidationerror = false;\r\n\r\n        if (name.length === 0 || name === \"\") {\r\n            setNameErrorMsg(\"Please insert an service name\");\r\n            nameValidationError = true;\r\n        }\r\n        else {\r\n            nameValidationError = false;\r\n            setNameErrorMsg(\"\");\r\n        }\r\n\r\n        if (price == \"\") {\r\n            setPriceErrorMsg(\"Please insert a price\");\r\n            priceValidationError = true;\r\n        }\r\n        else {\r\n            priceValidationError = false;\r\n            setPriceErrorMsg(\"\");\r\n        }\r\n        if (agencyId == \"\") {\r\n            setAgencyIdErrorMsg(\"Please select an agency\");\r\n            agencyValidationerror = true;\r\n        }\r\n        else {\r\n            setAgencyIdErrorMsg(\"\");\r\n            agencyValidationerror = false;\r\n        }\r\n\r\n        if (!nameValidationError && !priceValidationError && !agencyValidationerror) {\r\n            axiosPostService();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box borderColor=\"navy\" {...defaultProps}>\r\n            <form className={classes.formRoot} noValidate autoComplete=\"off\">\r\n                <h2>Add an service</h2>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <div>\r\n                        <br />\r\n                        <GetAgencies agencyId={agencyId} setAgencyId={setAgencyId} />\r\n                        <TextField error={nameErrorMsg != \"\"} helperText={nameErrorMsg} required id=\"name\" label=\"Service name\" value={name}\r\n                            onChange={(e) => {\r\n                                setName(e.target.value);\r\n                                (e.target.value.length === 0) ? setNameErrorMsg(\"Please insert an agency name\") : setNameErrorMsg(\"\")\r\n                            }} />\r\n\r\n                        <TextField error={priceErrorMsg != \"\"} helperText={priceErrorMsg} id=\"price\" label=\"Price\" type=\"number\" required value={price}\r\n                            onChange={(e) => {\r\n                                setPrice(e.target.value);\r\n                            }} />\r\n                        <br />\r\n                    </div>\r\n                    <div style={{marginTop: 30, marginLeft: 10}}>\r\n                     <TextField variant=\"outlined\" multiline rows = \"12\" id=\"info\" label=\"Information\" value={info}\r\n                    onChange={(e) => {\r\n                        setInfo(e.target.value);\r\n                    }} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                <Button variant=\"contained\" className={classes.searchButton} onClick={() => handlePostClicked()}>Submit</Button>\r\n                <p style={{ color: \"red\", fontWeight: 900, fontSize: 16, marginLeft: 130 }}>{serverErrorMsg}</p>\r\n            </div>\r\n            <h4>{postCompletedMessage}</h4>\r\n        </Box>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}