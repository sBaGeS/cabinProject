{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\bookCabin\\\\BookCabinDialog.js\";\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { getToken, getUserId } from '../../Utils/Common';\nimport axios from 'axios';\nimport dateFormat from 'dateformat';\nconst useStyles = makeStyles(theme => ({\n  formRoot: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  Infotxt: {\n    color: 'yellow'\n  }\n}));\nexport default function BookCabinDialog(props) {\n  const token = getToken();\n  const user = getUserId();\n  const classes = useStyles();\n  const startDate = dateFormat(props.startDate, \"yyyy-mm-dd\");\n  const endDate = dateFormat(props.endDate, \"yyyy-mm-dd\");\n  const [pets, setPets] = useState(2);\n  const [petsErrorMsg, setPetsErrorMsg] = useState(\"\");\n  const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\n  const [dialogOpen, setDialogOpen] = useState(true);\n\n  const axiosPostReservation = () => {\n    axios.post('http://localhost:3001/reservation/', {\n      arrivaldate: startDate,\n      leavedate: endDate,\n      pets: pets,\n      person_id: user,\n      cabin_id: props.cabinId\n    }, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setDialogOpen(false);\n      props.book(false);\n    }).catch(function (error) {\n      console.log(error.response);\n      setServerErrorMsg(error.response.data.msg);\n    });\n  };\n\n  const handleClose = () => {\n    setDialogOpen(false);\n    props.book(false);\n  };\n\n  const handleBookClicked = () => {\n    let petsValidationError = false;\n\n    if (pets == 2) {\n      setPetsErrorMsg(\"Please select\");\n      petsValidationError = true;\n    } else {\n      petsValidationError = false;\n      setPetsErrorMsg(\"\");\n    }\n\n    if (petsValidationError === false) {\n      axiosPostReservation();\n    }\n  };\n\n  console.log(props.cabinId);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: dialogOpen,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Book cabin\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.formRoot,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(NativeSelect, {\n    required: true,\n    id: \"pets\",\n    label: \"Pets\",\n    error: petsErrorMsg != \"\",\n    onChange: e => {\n      setPets(parseInt(e.target.value, 10));\n      e.target.value != 2 ? setPetsErrorMsg(\"Please select\") : setPetsErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: true,\n    disabled: true,\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Pets?\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Yes\"), React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"No\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"startDate\",\n    label: \"Check in\",\n    readOnly: true,\n    value: dateFormat(props.startDate, \"dd/mm/yyyy\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"endDate\",\n    label: \"Check Out\",\n    readOnly: true,\n    value: dateFormat(props.endDate, \"dd/mm/yyyy\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontWeight: 900,\n      fontSize: 14,\n      marginLeft: 80\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, serverErrorMsg), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleBookClicked(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Book\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleClose(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Cancel\")))));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/bookCabin/BookCabinDialog.js"],"names":["React","useState","TextField","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","NativeSelect","getToken","getUserId","axios","dateFormat","useStyles","theme","formRoot","margin","spacing","width","Infotxt","color","BookCabinDialog","props","token","user","classes","startDate","endDate","pets","setPets","petsErrorMsg","setPetsErrorMsg","serverErrorMsg","setServerErrorMsg","dialogOpen","setDialogOpen","axiosPostReservation","post","arrivaldate","leavedate","person_id","cabin_id","cabinId","headers","then","response","console","log","book","catch","error","data","msg","handleClose","handleBookClicked","petsValidationError","e","parseInt","target","value","fontWeight","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport {getToken, getUserId} from '../../Utils/Common';\r\nimport axios from 'axios';\r\nimport dateFormat from 'dateformat';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formRoot: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        }\r\n    },\r\n    Infotxt: {\r\n        color: 'yellow',\r\n    }\r\n}));\r\n\r\nexport default function BookCabinDialog(props) {\r\n\r\n    const token = getToken();\r\n    const user = getUserId();\r\n\r\n    const classes = useStyles();\r\n\r\n    const startDate = dateFormat(props.startDate, \"yyyy-mm-dd\");\r\n\r\n    const endDate = dateFormat(props.endDate, \"yyyy-mm-dd\");\r\n\r\n    const [pets, setPets] = useState(2);\r\n    const [petsErrorMsg, setPetsErrorMsg] = useState(\"\");\r\n\r\n    const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(true);\r\n\r\n    const axiosPostReservation = () => {\r\n        axios.post('http://localhost:3001/reservation/', {\r\n            arrivaldate: startDate,\r\n            leavedate: endDate,\r\n            pets: pets,\r\n            person_id: user,\r\n            cabin_id: props.cabinId\r\n        },\r\n            {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setDialogOpen(false);\r\n                props.book(false);   \r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                setServerErrorMsg(error.response.data.msg);\r\n            });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setDialogOpen(false);\r\n        props.book(false);\r\n    };\r\n\r\n    const handleBookClicked = () => {\r\n        let petsValidationError = false;\r\n\r\n        if (pets == 2) {\r\n            setPetsErrorMsg(\"Please select\");\r\n            petsValidationError = true;\r\n        }\r\n        else {\r\n            petsValidationError = false;\r\n            setPetsErrorMsg(\"\");\r\n        }\r\n\r\n        if (petsValidationError === false) {\r\n            axiosPostReservation();\r\n        }\r\n    }\r\n\r\n    console.log(props.cabinId);\r\n\r\nreturn (\r\n    <div>\r\n        <Dialog open={dialogOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Book cabin</DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.formRoot} noValidate autoComplete=\"off\">\r\n                <NativeSelect\r\n                 required id=\"pets\" label=\"Pets\" error={petsErrorMsg != \"\"}\r\n                  onChange={(e) => {\r\n                      setPets(parseInt(e.target.value, 10));\r\n                      (e.target.value != 2) ? setPetsErrorMsg(\"Please select\") : setPetsErrorMsg(\"\")\r\n                  }}>\r\n                 <option selected disabled value=\"2\">Pets?</option>\r\n                 <option value=\"1\">Yes</option>\r\n                 <option value=\"0\">No</option>\r\n                </NativeSelect>\r\n                <br />\r\n                <TextField id=\"startDate\" label=\"Check in\" readOnly value={dateFormat(props.startDate, \"dd/mm/yyyy\")} />\r\n                <TextField id=\"endDate\" label=\"Check Out\" readOnly value={dateFormat(props.endDate, \"dd/mm/yyyy\")} />\r\n\r\n            </form>\r\n            \r\n            </DialogContent>\r\n\r\n            <div>\r\n                <p style={{ color: \"red\", fontWeight: 900, fontSize: 14, marginLeft: 80 }}>{serverErrorMsg}</p>\r\n\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" onClick={() => handleBookClicked()}>Book</Button>\r\n                    <Button variant=\"contained\" onClick={() => handleClose()}>Cancel</Button>\r\n                </DialogActions>\r\n            </div>\r\n        </Dialog>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}