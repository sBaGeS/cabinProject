{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\postAgency\\\\PostAgencyForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Box from '@material-ui/core/Box';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  searchButton: {\n    margin: 20,\n    backgroundColor: 'navy',\n    color: 'white'\n  },\n  formRoot: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 2,\n  padding: 2,\n  borderRadius: 16,\n  borderColor: 'navy'\n};\nexport default function PostAgencyForm() {\n  const token = sessionStorage.getItem('token');\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [nameErrorMsg, setNameErrorMsg] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n  const [postarea, setPostarea] = useState(\"\");\n  const [phonenumber, setPhonenumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\n  const [postCompletedMessage, setPostCompletedMessage] = useState(\"\");\n\n  const axiosPostAgency = () => {\n    axios.post('http://localhost:3001/agency', {\n      name: name,\n      address: address,\n      postcode: postcode,\n      postarea: postarea,\n      phonenumber: phonenumber,\n      email: email\n    }, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setPostCompletedMessage(\"Agency \" + name + \" posted\");\n      resetTextFields();\n    }).catch(function (error) {\n      console.log(error.response);\n      setServerErrorMsg(error.response.data.msg);\n    });\n  };\n\n  const resetTextFields = () => {\n    setName(\"\");\n    setAddress(\"\");\n    setPostcode(\"\");\n    setPostarea(\"\");\n    setPhonenumber(\"\");\n    setEmail(\"\");\n  };\n\n  const handlePostClicked = () => {\n    let nameValidationError = false;\n\n    if (name.length === 0 || name === \"\") {\n      setNameErrorMsg(\"Please insert an agency name\");\n      nameValidationError = true;\n    } else {\n      nameValidationError = false;\n      setNameErrorMsg(\"\");\n    }\n\n    if (nameValidationError === false) {\n      axiosPostAgency();\n    }\n  };\n\n  return React.createElement(Box, Object.assign({\n    borderColor: \"navy\"\n  }, defaultProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: classes.formRoot,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Add an agency\"), React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: nameErrorMsg != \"\",\n    helperText: nameErrorMsg,\n    required: true,\n    id: \"name\",\n    label: \"Agency name\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n      e.target.value.length === 0 ? setNameErrorMsg(\"Please insert an agency name\") : setNameErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"address\",\n    label: \"Address\",\n    value: address,\n    onChange: e => {\n      setAddress(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"postcode\",\n    label: \"Postcode\",\n    value: postcode,\n    onChange: e => {\n      setPostcode(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"postarea\",\n    label: \"Postarea\",\n    value: postarea,\n    onChange: e => {\n      setPostarea(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"phonenumber\",\n    label: \"Phonenumber\",\n    value: phonenumber,\n    onChange: e => {\n      setPhonenumber(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"email\",\n    label: \"Email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    onClick: () => handlePostClicked(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontWeight: 900,\n      fontSize: 16,\n      marginLeft: 130\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, serverErrorMsg)), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, postCompletedMessage));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/postAgency/PostAgencyForm.js"],"names":["React","useState","useEffect","TextField","makeStyles","Button","NativeSelect","FormHelperText","Box","axios","useStyles","theme","searchButton","margin","backgroundColor","color","formRoot","spacing","width","formControl","minWidth","defaultProps","bgcolor","m","border","padding","borderRadius","borderColor","PostAgencyForm","token","sessionStorage","getItem","classes","name","setName","nameErrorMsg","setNameErrorMsg","address","setAddress","postcode","setPostcode","postarea","setPostarea","phonenumber","setPhonenumber","email","setEmail","serverErrorMsg","setServerErrorMsg","postCompletedMessage","setPostCompletedMessage","axiosPostAgency","post","headers","then","response","console","log","resetTextFields","catch","error","data","msg","handlePostClicked","nameValidationError","length","display","e","target","value","fontWeight","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    searchButton: {\r\n        margin: 20,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n    },\r\n    formRoot: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n\r\n            width: '25ch',\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n\r\n        minWidth: 120,\r\n    },\r\n\r\n}));\r\nconst defaultProps = {\r\n    bgcolor: 'background.paper',\r\n    m: 1,\r\n    border: 2,\r\n    padding: 2,\r\n    borderRadius: 16,\r\n    borderColor: 'navy'\r\n\r\n};\r\n\r\nexport default function PostAgencyForm() {\r\n\r\n    const token = sessionStorage.getItem('token');\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [nameErrorMsg, setNameErrorMsg] = useState(\"\");\r\n\r\n    const [address, setAddress] = useState(\"\");\r\n\r\n    const [postcode, setPostcode] = useState(\"\");\r\n\r\n    const [postarea, setPostarea] = useState(\"\");\r\n\r\n    const [phonenumber, setPhonenumber] = useState(\"\");\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\r\n    const [postCompletedMessage, setPostCompletedMessage] = useState(\"\")\r\n\r\n\r\n    const axiosPostAgency = () => {\r\n        axios.post('http://localhost:3001/agency', {\r\n            name: name,\r\n            address: address,\r\n            postcode: postcode,\r\n            postarea: postarea,\r\n            phonenumber: phonenumber,\r\n            email: email,\r\n        },\r\n            {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setPostCompletedMessage(\"Agency \" + name + \" posted\");\r\n                resetTextFields();\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                setServerErrorMsg(error.response.data.msg);\r\n            });\r\n    }\r\n\r\n    const resetTextFields = () => {\r\n        setName(\"\");\r\n        setAddress(\"\");\r\n        setPostcode(\"\");\r\n        setPostarea(\"\");\r\n        setPhonenumber(\"\");\r\n        setEmail(\"\");\r\n    }\r\n\r\n    const handlePostClicked = () => {\r\n\r\n        let nameValidationError = false;\r\n\r\n        if (name.length === 0 || name === \"\") {\r\n            setNameErrorMsg(\"Please insert an agency name\");\r\n            nameValidationError = true;\r\n        }\r\n        else {\r\n            nameValidationError = false;\r\n            setNameErrorMsg(\"\");\r\n        }\r\n\r\n        if (nameValidationError === false) {\r\n            axiosPostAgency();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box borderColor=\"navy\" {...defaultProps}>\r\n            <form className={classes.formRoot} noValidate autoComplete=\"off\">\r\n                <h2>Add an agency</h2>\r\n                <div style={{display: \"flex\"}}>\r\n                <div>\r\n                <br />\r\n                <TextField error={nameErrorMsg != \"\"} helperText={nameErrorMsg} required id=\"name\" label=\"Agency name\" value={name}\r\n                    onChange={(e) => {\r\n                        setName(e.target.value);\r\n                        (e.target.value.length === 0) ? setNameErrorMsg(\"Please insert an agency name\") : setNameErrorMsg(\"\")\r\n                    }} />\r\n\r\n                <TextField id=\"address\" label=\"Address\" value={address}\r\n                    onChange={(e) => {\r\n                        setAddress(e.target.value);\r\n                    }} />\r\n                <br />\r\n\r\n                <TextField id=\"postcode\" label=\"Postcode\" value={postcode}\r\n                    onChange={(e) => {\r\n                        setPostcode(e.target.value);\r\n                    }} />\r\n                <TextField id=\"postarea\" label=\"Postarea\" value={postarea}\r\n                    onChange={(e) => {\r\n                        setPostarea(e.target.value);\r\n                    }} />\r\n                <br />\r\n                <TextField id=\"phonenumber\" label=\"Phonenumber\" value={phonenumber}\r\n                    onChange={(e) => {\r\n                        setPhonenumber(e.target.value);\r\n                    }} />\r\n                <TextField id=\"email\" label=\"Email\" value={email}\r\n                    onChange={(e) => {\r\n                        setEmail(e.target.value);\r\n                    }} />\r\n                    <br />\r\n                    </div>\r\n                    </div>\r\n            </form>\r\n            <div>\r\n            <Button variant=\"contained\" className={classes.searchButton} onClick={() => handlePostClicked()}>Submit</Button>\r\n            <p style={{ color: \"red\", fontWeight: 900, fontSize: 16, marginLeft: 130}}>{serverErrorMsg}</p>\r\n            </div>\r\n            <h4>{postCompletedMessage}</h4>\r\n        </Box>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}