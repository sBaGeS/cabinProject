{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\pages\\\\my_reservations\\\\GetMyServiceReservations.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { getUserId, getToken, getAdmin } from \"../../../Utils/Common\";\nimport DeleteServiceReservationDialog from \"../../removeServiceReservation/RemoveServiceReservationDialog\";\nimport dateFormat from 'dateformat';\nconst useStyles = makeStyles({\n  cabinDiv: {\n    display: 'grid',\n    background: 'navy',\n    padding: 8,\n    maxWidth: 600,\n    maxHeight: 400\n  },\n  tableHeader: {\n    backgroundColor: 'navy'\n  },\n  tableHeaderCell: {\n    color: 'white'\n  },\n  agencyInfo: {\n    margin: 4,\n    height: 250\n  },\n  editButton: {\n    margin: 4,\n    backgroundColor: 'navy',\n    color: 'white',\n    minWidth: 50\n  }\n});\nexport default function GetMyServiceReservations() {\n  const classes = useStyles();\n  const user = props.id;\n  const token = getToken();\n  const [remove, setRemove] = useState(false);\n  const [reservations, setReservations] = useState([]);\n  const [id, setId] = useState(\"\");\n  const today = dateFormat(Date(), \"dd/mm/yyyy\");\n  let dialog;\n  useEffect(() => {\n    const getServiceReservation = () => {\n      axios.get(\"http://localhost:3001/serviceReservation?\" + user, {\n        headers: {\n          token: token\n        }\n      }).then(function (response) {\n        console.log(response);\n        setReservations(response.data.serviceReservations);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    getServiceReservation();\n  }, []);\n\n  const date_diff_indays = function (date1, date2) {\n    const dt1DateParts = date1.split(\"/\");\n    const dt2DateParts = date2.split(\"/\");\n    const dt1 = new Date(dt1DateParts[1] + \"/\" + dt1DateParts[0] + \"/\" + dt1DateParts[2]);\n    const dt2 = new Date(dt2DateParts[1] + \"/\" + dt2DateParts[0] + \"/\" + dt2DateParts[2]);\n    return Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) / (1000 * 60 * 60 * 24));\n  };\n\n  if (remove) {\n    dialog = React.createElement(DeleteServiceReservationDialog, {\n      remove: setRemove,\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    });\n  } else {\n    dialog = \"\";\n  }\n\n  if (reservations.length != 0) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    className: classes.tableHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Agency\"), React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Date\"), React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Cancel reservation\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, reservations.map((reservation, i) => React.createElement(TableRow, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.editButton,\n    href: `/service_detail/${reservation.service_id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, reservation.name)), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, reservation.agency), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, reservation.reservationdate), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, date_diff_indays(today, reservation.reservationdate) >= 7 || getAdmin() ? React.createElement(Button, {\n    className: classes.editButton,\n    onClick: () => remove ? setRemove(false) : setRemove(true) + setId(reservation.servicereservation_id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Cancel\") : \"-\")))))), dialog);else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"No service reservations found\");\n  }\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/pages/my_reservations/GetMyServiceReservations.js"],"names":["React","useState","useEffect","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","getUserId","getToken","getAdmin","DeleteServiceReservationDialog","dateFormat","useStyles","cabinDiv","display","background","padding","maxWidth","maxHeight","tableHeader","backgroundColor","tableHeaderCell","color","agencyInfo","margin","height","editButton","minWidth","GetMyServiceReservations","classes","user","props","id","token","remove","setRemove","reservations","setReservations","setId","today","Date","dialog","getServiceReservation","get","headers","then","response","console","log","data","serviceReservations","catch","error","date_diff_indays","date1","date2","dt1DateParts","split","dt2DateParts","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","length","table","map","reservation","i","service_id","name","agency","reservationdate","servicereservation_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getUserId, getToken, getAdmin } from \"../../../Utils/Common\";\r\nimport DeleteServiceReservationDialog from \"../../removeServiceReservation/RemoveServiceReservationDialog\";\r\nimport dateFormat from 'dateformat';\r\n\r\nconst useStyles = makeStyles({\r\n    cabinDiv: {\r\n        display: 'grid',\r\n        background: 'navy',\r\n        padding: 8,\r\n        maxWidth: 600,\r\n        maxHeight: 400\r\n    },\r\n    tableHeader: {\r\n        backgroundColor: 'navy',\r\n\r\n    },\r\n    tableHeaderCell: {\r\n        color: 'white'\r\n    },\r\n    agencyInfo: {\r\n        margin: 4,\r\n        height: 250\r\n\r\n    },\r\n    editButton: {\r\n        margin: 4,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n        minWidth: 50,\r\n    },\r\n\r\n});\r\n\r\nexport default function GetMyServiceReservations() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const user = props.id;\r\n    const token = getToken();\r\n\r\n    const [remove, setRemove] = useState(false);\r\n    const [reservations, setReservations] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n\r\n    const today = dateFormat(Date(), \"dd/mm/yyyy\");\r\n\r\n    let dialog;\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getServiceReservation = () => {\r\n            axios.get(\"http://localhost:3001/serviceReservation?\" + user, {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n                .then(function (response) {\r\n                    console.log(response);\r\n                    setReservations(response.data.serviceReservations);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n\r\n        getServiceReservation()\r\n    }, []);\r\n\r\n    const date_diff_indays = function (date1, date2) {\r\n\r\n        const dt1DateParts = date1.split(\"/\");\r\n        const dt2DateParts = date2.split(\"/\");\r\n\r\n        const dt1 = new Date(dt1DateParts[1] + \"/\" + dt1DateParts[0] + \"/\" + dt1DateParts[2]);\r\n        const dt2 = new Date(dt2DateParts[1] + \"/\" + dt2DateParts[0] + \"/\" + dt2DateParts[2]);\r\n\r\n        return Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) / (1000 * 60 * 60 * 24));\r\n    }\r\n\r\n\r\n\r\n    if (remove) {\r\n        dialog = <DeleteServiceReservationDialog remove={setRemove} id={id} />;\r\n    }\r\n    else {\r\n        dialog = \"\";\r\n    }\r\n\r\n    if (reservations.length != 0)\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"customized table\">\r\n                        <TableHead className={classes.tableHeader}>\r\n                            <TableRow>\r\n                                <TableCell className={classes.tableHeaderCell} align=\"left\">Name</TableCell>\r\n                                <TableCell className={classes.tableHeaderCell} align=\"left\">Agency</TableCell>\r\n                                <TableCell className={classes.tableHeaderCell} align=\"left\">Date</TableCell>\r\n                                <TableCell className={classes.tableHeaderCell} align=\"center\">Cancel reservation</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {reservations.map((reservation, i) => <TableRow key={i}>\r\n                                <TableCell align=\"left\"><Button className={classes.editButton} href={`/service_detail/${reservation.service_id}`}>{reservation.name}</Button></TableCell>\r\n                                <TableCell align=\"left\">{reservation.agency}</TableCell>\r\n                                <TableCell align=\"left\">{reservation.reservationdate}</TableCell>\r\n                                <TableCell align=\"center\">{date_diff_indays(today, reservation.reservationdate) >= 7 || getAdmin() ? <Button className={classes.editButton} onClick={() => remove ? setRemove(false) : setRemove(true) + setId(reservation.servicereservation_id)}>Cancel</Button> : \"-\"}</TableCell>\r\n                            </TableRow>)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {dialog}\r\n            </div>\r\n        )\r\n    else {\r\n        return (\r\n            <div>\r\n                No service reservations found\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}