{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\pages\\\\admin_tools\\\\CustomerTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport EditCustomerDialog from \"./EditCustomerDialog\";\nimport RemoveCustomerDialog from \"./RemoveCustomerDialog\";\nconst useStyles = makeStyles({\n  CustomerDiv: {\n    maxWidth: 1400,\n    paddingTop: 15\n  },\n  tableHeader: {\n    backgroundColor: 'orange'\n  },\n  tableHeaderCell: {\n    color: 'white'\n  },\n  editButton: {\n    margin: 4,\n    backgroundColor: 'navy',\n    color: 'white'\n  },\n  deleteButton: {\n    margin: 4,\n    backgroundColor: 'navy',\n    color: 'white'\n  },\n  cabinButton: {\n    margin: 4,\n    backgroundColor: 'navy',\n    color: 'white'\n  }\n});\nexport default function CustomerTable(props) {\n  const style = useStyles();\n  const query = props.query;\n  const searchClicked = props.searchClicked;\n  const [customers, setCustomers] = useState([]);\n  const [firstname, setFirstname] = useState([]);\n  const [lastname, setLastname] = useState([]);\n  const [username, setUsername] = useState([]);\n  const [editedCustomer, setEditedCustomer] = useState({\n    firstname: null,\n    lastname: null,\n    username: null\n  });\n  const [id, setId] = useState(0);\n  const [edit, setEdit] = useState(false);\n  const [remove, setRemove] = useState(false);\n  const [removeMsg, setRemoveMsg] = useState(\"\");\n  let dialog;\n  useEffect(() => {\n    const getCustomers = () => {\n      axios.get(\"http://localhost:3001/person?\" + query, {\n        headers: {\n          token: sessionStorage.getItem(\"token\")\n        }\n      }).then(function (response) {\n        console.log(response);\n        setCustomers(response.data.Persons);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    if (searchClicked > 0) {\n      getCustomers();\n    }\n  }, [searchClicked]);\n\n  if (edit) {\n    dialog = React.createElement(EditCustomerDialog, {\n      id: id,\n      edit: setEdit,\n      setEditedCustomer: setEditedCustomer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    });\n  } else if (remove) {\n    dialog = React.createElement(RemoveCustomerDialog, {\n      id: id,\n      remove: setRemove,\n      removeMsg: setRemoveMsg,\n      firstname: firstname,\n      lastname: lastname,\n      username: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n  } else {\n    dialog = null;\n  }\n\n  if (searchClicked == 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    });\n  } else if (editedCustomer.firstname != null) {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 25,\n        marginLeft: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: \"orange\",\n        fontWeight: 900,\n        fontSize: 22\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Customer \", editedCustomer.firstname, \" \", React.createElement(\"a\", {\n      style: {\n        color: \"darkred\",\n        fontWeight: 900,\n        fontSize: 22\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\\"\", editedCustomer.username, \"\\\"\"), \" \", editedCustomer.lastname, \" succesfully edited\"));\n  } else if (removeMsg != \"\") {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 25,\n        marginLeft: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, removeMsg);\n  } else {\n    return React.createElement(\"div\", {\n      className: style.CustomerDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(TableContainer, {\n      component: Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: style.table,\n      \"aria-label\": \"customized table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      className: style.tableHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Id\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Firstname\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Lastname\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Address\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Postcode\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Postarea\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Phonenumber\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Email\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Username\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Role\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(TableCell, {\n      className: style.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Cabins\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, customers.map((customer, i) => React.createElement(TableRow, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, customer.person_id), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, customer.firstname), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, customer.lastname), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, customer.address), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, customer.postcode), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, customer.postarea), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, customer.phonenumber), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, customer.email), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, customer.username), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, customer.role_id == 1 ? React.createElement(\"a\", {\n      style: {\n        color: \"red\",\n        fontWeight: 900\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Admin\") : \"Customer\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: style.editButton,\n      onClick: () => edit ? setEdit(false) : setEdit(true) + setId(customer.person_id) + setFirstname(customer.firstname) + setLastname(customer.lastname) + setUsername(customer.username),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Edit\")), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: style.deleteButton,\n      onClick: () => remove ? setRemove(false) : setRemove(true) + setId(customer.person_id) + setFirstname(customer.firstname) + setLastname(customer.lastname) + setUsername(customer.username),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Delete\")), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: style.cabinButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Cabins\"))))))), dialog);\n  }\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/pages/admin_tools/CustomerTable.js"],"names":["React","useState","useEffect","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","EditCustomerDialog","RemoveCustomerDialog","useStyles","CustomerDiv","maxWidth","paddingTop","tableHeader","backgroundColor","tableHeaderCell","color","editButton","margin","deleteButton","cabinButton","CustomerTable","props","style","query","searchClicked","customers","setCustomers","firstname","setFirstname","lastname","setLastname","username","setUsername","editedCustomer","setEditedCustomer","id","setId","edit","setEdit","remove","setRemove","removeMsg","setRemoveMsg","dialog","getCustomers","get","headers","token","sessionStorage","getItem","then","response","console","log","data","Persons","catch","error","marginTop","marginLeft","fontWeight","fontSize","table","map","customer","i","person_id","address","postcode","postarea","phonenumber","email","role_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport EditCustomerDialog from \"./EditCustomerDialog\";\r\nimport RemoveCustomerDialog from \"./RemoveCustomerDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n    CustomerDiv: {\r\n        maxWidth: 1400,\r\n        paddingTop: 15,\r\n    },\r\n    tableHeader: {\r\n        backgroundColor: 'orange',\r\n    },\r\n    tableHeaderCell: {\r\n        color: 'white'\r\n    },\r\n    editButton: {\r\n        margin: 4,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n    },\r\n    deleteButton: {\r\n        margin: 4,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n    },\r\n    cabinButton: {\r\n        margin: 4,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n    },\r\n\r\n});\r\n\r\nexport default function CustomerTable(props) {\r\n\r\n    const style = useStyles();\r\n\r\n\r\n    const query = props.query;\r\n    const searchClicked = props.searchClicked;\r\n    const [customers, setCustomers] = useState([]);\r\n\r\n    const [firstname, setFirstname] = useState([]);\r\n    const [lastname, setLastname] = useState([]);\r\n    const [username, setUsername] = useState([]);\r\n\r\n\r\n    const [editedCustomer, setEditedCustomer] = useState({firstname: null, lastname: null, username: null});\r\n\r\n    const [id, setId] = useState(0);\r\n\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const [remove, setRemove] = useState(false);\r\n    const [removeMsg, setRemoveMsg] = useState(\"\");\r\n\r\n    let dialog;\r\n\r\n    useEffect(() => {\r\n        const getCustomers = () => {\r\n            axios.get(\"http://localhost:3001/person?\" + query, {\r\n                headers: {\r\n                    token: sessionStorage.getItem(\"token\")\r\n                }\r\n            })\r\n                .then(function (response) {\r\n                    console.log(response);\r\n                    setCustomers(response.data.Persons);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        if (searchClicked > 0)\r\n        {\r\n        getCustomers();\r\n        }\r\n    }, [searchClicked]);\r\n\r\n    if(edit)\r\n    {\r\n        dialog = <EditCustomerDialog id = {id} edit = {setEdit} setEditedCustomer={setEditedCustomer}/>;\r\n    }\r\n\r\n    else if(remove)\r\n    {\r\n        dialog = <RemoveCustomerDialog id = {id} remove = {setRemove} removeMsg={setRemoveMsg} firstname={firstname} lastname={lastname} username={username}/>;\r\n    }\r\n\r\n    else\r\n    {\r\n        dialog = null;\r\n    }\r\n\r\n    if (searchClicked == 0) {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if (editedCustomer.firstname != null)\r\n    {\r\n      return (\r\n       <div style={{marginTop: 25, marginLeft: 12}}>\r\n      <a style={{ color: \"orange\", fontWeight: 900, fontSize: 22}}>Customer {editedCustomer.firstname} <a style={{ color: \"darkred\", fontWeight: 900, fontSize: 22}}>\"{editedCustomer.username}\"</a> {editedCustomer.lastname} succesfully edited</a>\r\n       </div>\r\n      )\r\n    }\r\n\r\n    else if (removeMsg != \"\")\r\n    {\r\n      return (\r\n       <div style={{marginTop: 25, marginLeft: 12}}>\r\n         {removeMsg}\r\n       </div>\r\n      )\r\n    }\r\n\r\n    else {\r\n        return (\r\n<div className={style.CustomerDiv}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={style.table} aria-label=\"customized table\">\r\n                        <TableHead className={style.tableHeader}>\r\n                            <TableRow>\r\n                                <TableCell className={style.tableHeaderCell}>Id</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Firstname</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Lastname</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Address</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Postcode</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Postarea</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Phonenumber</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Email</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Username</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Role</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Edit</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Delete</TableCell>\r\n                                <TableCell className={style.tableHeaderCell} align=\"right\">Cabins</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {customers.map((customer, i) => <TableRow key={i}>\r\n                                <TableCell>{customer.person_id}</TableCell>\r\n                                <TableCell align=\"right\">{customer.firstname}</TableCell>\r\n                                <TableCell align=\"right\">{customer.lastname}</TableCell>\r\n                                <TableCell align=\"right\">{customer.address}</TableCell>\r\n                                <TableCell align=\"right\">{customer.postcode}</TableCell>\r\n                                <TableCell align=\"right\">{customer.postarea}</TableCell>\r\n                                <TableCell align=\"right\">{customer.phonenumber}</TableCell>\r\n                                <TableCell align=\"right\">{customer.email}</TableCell>\r\n                                <TableCell align=\"right\">{customer.username}</TableCell>\r\n                                <TableCell align=\"right\">{customer.role_id == 1 ? <a style={{ color: \"red\", fontWeight: 900}}>Admin</a> : \"Customer\"}</TableCell>\r\n                                <TableCell align=\"right\"><Button className={style.editButton} onClick={() => edit ? setEdit(false) : setEdit(true) + setId(customer.person_id) + setFirstname(customer.firstname) + setLastname(customer.lastname) + setUsername(customer.username)}>Edit</Button></TableCell>\r\n                                <TableCell align=\"right\"><Button className={style.deleteButton} onClick={() => remove ? setRemove(false) : setRemove(true) + setId(customer.person_id) + setFirstname(customer.firstname) + setLastname(customer.lastname) + setUsername(customer.username)}>Delete</Button></TableCell>\r\n                                <TableCell align=\"right\"><Button className={style.cabinButton}>Cabins</Button></TableCell>\r\n                            </TableRow>)}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {dialog}\r\n        </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}