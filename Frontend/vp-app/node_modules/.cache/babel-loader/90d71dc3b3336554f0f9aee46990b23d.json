{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\search_services\\\\SearchServices.js\";\nimport 'date-fns';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport GetAgencies from '../getAgencies/GetAgencies';\nconst useStyles = makeStyles(theme => ({\n  searchRoot: {\n    padding: '8px',\n    maxWidth: 600,\n    backgroundColor: 'navy',\n    color: 'white'\n  },\n  input: {\n    marginTop: 4,\n    marginLeft: 4,\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 4\n  },\n  datePicker: {\n    margin: '10px',\n    maxWidth: 500\n  },\n  divider: {\n    height: 40,\n    margin: 4\n  },\n  searchButton: {\n    margin: 4,\n    backgroundColor: 'white',\n    color: 'navy'\n  },\n  TextField: {\n    marginTop: 15,\n    marginLeft: 15,\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 4\n  }\n}));\nexport default function ServiceSearchForm(props) {\n  const classes = useStyles();\n  const [agencyId, setAgencyId] = useState(\"\");\n  const [minPrice, setMinPrice] = useState(\"\");\n  const [maxPrice, setMaxPrice] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const handleSearch = () => {\n    let query = \"\";\n\n    if (agencyId != \"\") {\n      query += \"agency_id=\" + agencyId + \"&\";\n    }\n\n    if (name != \"\") {\n      query += \"name=\" + name + \"&\";\n    }\n\n    if (minPrice != \"\") {\n      query += \"min_price=\" + minPrice + \"&\";\n    }\n\n    if (maxPrice != \"\") {\n      query += \"max_price=\" + maxPrice + \"&\";\n    }\n\n    props.setQuery(query);\n    props.setSearchClicked(props.searchClicked + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.searchRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Search available services\"), React.createElement(GetAgencies, {\n    agencyId: agencyId,\n    setAgencyId: setAgencyId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.TextField,\n    type: \"text\",\n    id: \"name\",\n    label: \"Search\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.TextField,\n    type: \"number\",\n    id: \"min_price\",\n    label: \"Min Price\",\n    value: minPrice,\n    onChange: e => setMinPrice(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.TextField,\n    type: \"number\",\n    id: \"max_price\",\n    label: \"Max Price\",\n    value: maxPrice,\n    onChange: e => setMaxPrice(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    onClick: () => handleSearch(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Search\")));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/search_services/SearchServices.js"],"names":["React","useState","makeStyles","Paper","Button","TextField","GetAgencies","useStyles","theme","searchRoot","padding","maxWidth","backgroundColor","color","input","marginTop","marginLeft","flex","borderRadius","datePicker","margin","divider","height","searchButton","ServiceSearchForm","props","classes","agencyId","setAgencyId","minPrice","setMinPrice","maxPrice","setMaxPrice","name","setName","handleSearch","query","setQuery","setSearchClicked","searchClicked","e","target","value"],"mappings":"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","sourcesContent":["import 'date-fns';\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GetAgencies from '../getAgencies/GetAgencies';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    searchRoot: {\r\n        padding: '8px',\r\n        maxWidth: 600,\r\n        backgroundColor: 'navy',\r\n        color: 'white'\r\n    },\r\n    input: {\r\n        marginTop: 4,\r\n        marginLeft: 4,\r\n        backgroundColor: 'white',\r\n        flex: 1,\r\n        borderRadius: 4\r\n    },\r\n    datePicker: {\r\n        margin: '10px',\r\n        maxWidth: 500\r\n    },\r\n    divider: {\r\n        height: 40,\r\n        margin: 4,\r\n    },\r\n    searchButton: {\r\n        margin: 4,\r\n        backgroundColor: 'white',\r\n        color: 'navy',\r\n    },\r\n    TextField: {\r\n        marginTop: 15,\r\n        marginLeft: 15,\r\n        backgroundColor: 'white',\r\n        flex: 1,\r\n        borderRadius: 4\r\n    },\r\n}));\r\nexport default function ServiceSearchForm(props) {\r\n    const classes = useStyles();\r\n\r\n    const [agencyId, setAgencyId] = useState(\"\");\r\n    const [minPrice, setMinPrice] = useState(\"\");\r\n    const [maxPrice, setMaxPrice] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n  \r\n\r\n    const handleSearch = () => {\r\n        let query = \"\";\r\n\r\n        if (agencyId != \"\") {\r\n            query += \"agency_id=\" + agencyId + \"&\";\r\n        }\r\n        if(name != \"\"){\r\n            query += \"name=\" + name  + \"&\";\r\n        }\r\n        if (minPrice != \"\") {\r\n            query += \"min_price=\" + minPrice + \"&\";\r\n        }\r\n        if (maxPrice != \"\") {\r\n            query += \"max_price=\" + maxPrice + \"&\";\r\n        }\r\n        props.setQuery(query);\r\n        props.setSearchClicked(props.searchClicked + 1);\r\n    }\r\n    return (\r\n        <div>\r\n            <Paper className={classes.searchRoot}>\r\n                <h3>Search available services</h3>\r\n                <GetAgencies agencyId={agencyId} setAgencyId={setAgencyId} />\r\n                <br />\r\n                <TextField className={classes.TextField} type=\"text\" id=\"name\" label=\"Search\" value={name}\r\n                    onChange={(e) =>\r\n                        setName(e.target.value)} />\r\n                        <br/>\r\n                <TextField className={classes.TextField} type=\"number\" id=\"min_price\" label=\"Min Price\" value={minPrice}\r\n                    onChange={(e) =>\r\n                        setMinPrice(e.target.value)} />\r\n                <TextField className={classes.TextField} type=\"number\" id=\"max_price\" label=\"Max Price\" value={maxPrice}\r\n                    onChange={(e) =>\r\n                        setMaxPrice(e.target.value)} />\r\n                <br />\r\n                <Button variant=\"contained\" className={classes.searchButton}\r\n                    onClick={() => handleSearch()}>Search</Button>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}