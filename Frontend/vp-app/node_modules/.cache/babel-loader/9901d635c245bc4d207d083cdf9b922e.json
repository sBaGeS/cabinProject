{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\postCabin\\\\PostCabinForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Box from '@material-ui/core/Box';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  searchButton: {\n    margin: 4,\n    backgroundColor: 'navy',\n    color: 'white'\n  },\n  formRoot: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 2,\n  padding: 2,\n  borderRadius: 16,\n  borderColor: 'navy'\n};\nexport default function PostCabinForm() {\n  const id = sessionStorage.getItem('user_id');\n  const token = sessionStorage.getItem('token');\n  const classes = useStyles();\n  const [agencies, setAgencies] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [nameErrorMsg, setNameErrorMsg] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [addressErrorMsg, setAddressErrorMsg] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n  const [postcodeErrorMsg, setPostcodeErrorMsg] = useState(\"\");\n  const [postarea, setPostarea] = useState(\"\");\n  const [postareaErrorMsg, setPostareaErrorMsg] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [priceErrorMsg, setPriceErrorMsg] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [sizeErrorMsg, setSizeErrorMsg] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n  const [cabinOwnerId, setCabinOwnerId] = useState(id);\n  const [cabinOwnerIdErrorMsg, setCabinOwnerIdErrorMsg] = useState(\"\");\n  const [agencyId, setAgencyId] = useState(\"\");\n  const [agencyIdErrorMsg, setAgencyIdErrorMsg] = useState(\"\");\n  const [capacity, setCapacity] = useState(\"\");\n  const [capacityErrorMsg, setCapacityErrorMsg] = useState(\"\");\n  const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\n  const [postCompletedMessage, setPostCompletedMessage] = useState(\"\");\n  useEffect(() => {\n    const getAgencies = () => {\n      axios.get(\"http://localhost:3001/agency\", {}).then(function (response) {\n        console.log(response);\n        setAgencies(response.data.Agencies);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    getAgencies();\n  }, []);\n\n  const axiosPostCabin = () => {\n    axios.post('http://localhost:3001/cabin', {\n      name: name,\n      address: address,\n      postcode: postcode,\n      postarea: postarea,\n      price: price,\n      size: size,\n      agency_id: agencyId,\n      capacity: capacity,\n      info: info\n    }, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setPostCompletedMessage(\"Cabin \" + name + \" posted\");\n      resetTextFields();\n    }).catch(function (error) {\n      console.log(error.response);\n      setServerErrorMsg(error.response.data.msg);\n    });\n  };\n\n  const resetTextFields = () => {\n    setName(\"\");\n    setAddress(\"\");\n    setPostcode(\"\");\n    setPostarea(\"\");\n    setPrice(\"\");\n    setSize(\"\");\n    setAgencyId(\"\");\n    setCapacity(\"\");\n  };\n\n  const handlePostClicked = () => {\n    let nameValidationError = false;\n    let priceValidationError = false;\n    let addressValidationError = false;\n    let postcodeValidationError = false;\n    let postareaValidationError = false;\n    let sizeValidationError = false;\n    let agencyIdValidationError = false;\n    let cabinOwnerIdValidationError = false;\n    let capacityValidationError = false;\n\n    if (name.length === 0 || name === \"\") {\n      setNameErrorMsg(\"Please insert a cabin name\");\n      nameValidationError = true;\n    } else {\n      nameValidationError = false;\n      setNameErrorMsg(\"\");\n    }\n\n    if (price.length === 0 || price === \"\") {\n      setPriceErrorMsg(\"Please insert a price\");\n      priceValidationError = true;\n    } else {\n      priceValidationError = false;\n      setPriceErrorMsg(\"\");\n    }\n\n    if (size.length === 0 || size === \"\") {\n      setSizeErrorMsg(\"Please insert a cabin size\");\n      sizeValidationError = true;\n    } else {\n      sizeValidationError = false;\n      setSizeErrorMsg(\"\");\n    }\n\n    if (agencyId.length === 0 || agencyId === \"\") {\n      agencyIdValidationError = true;\n      setAgencyIdErrorMsg(\"Please select an agency\");\n    } else {\n      agencyIdValidationError = false;\n      setAgencyIdErrorMsg(\"\");\n    }\n\n    if (address.length === 0 || address === \"\") {\n      addressValidationError = true;\n      setAddressErrorMsg(\"Please insert an address\");\n    } else {\n      addressValidationError = false;\n      setAddressErrorMsg(\"\");\n    }\n\n    if (postcode.length === 0 || postcode === \"\") {\n      postcodeValidationError = true;\n      setPostcodeErrorMsg(\"Please insert a postcode\");\n    } else {\n      postcodeValidationError = false;\n      setPostcodeErrorMsg(\"\");\n    }\n\n    if (postarea.length === 0 || postarea === \"\") {\n      postareaValidationError = true;\n      setPostareaErrorMsg(\"Please insert a postarea\");\n    } else {\n      postareaValidationError = false;\n      setPostareaErrorMsg(\"\");\n    }\n\n    if (cabinOwnerId.length === 0 || cabinOwnerId === \"\") {\n      cabinOwnerIdValidationError = true;\n      setCabinOwnerIdErrorMsg(\"Please insert a cabin owner\");\n    } else {\n      cabinOwnerIdValidationError = false;\n      setCabinOwnerIdErrorMsg(\"\");\n    }\n\n    if (capacity.length === 0 || capacity === \"\") {\n      capacityValidationError = true;\n      setCapacityErrorMsg(\"Please insert capacity for the cabin\");\n    } else {\n      capacityValidationError = false;\n      setCapacityErrorMsg(\"\");\n    }\n\n    if (nameValidationError === false && cabinOwnerIdValidationError === false && addressValidationError === false && postcodeValidationError === false && postareaValidationError === false && sizeValidationError === false && agencyIdValidationError === false && priceValidationError === false && capacityValidationError === false) {\n      axiosPostCabin();\n    }\n  };\n\n  return React.createElement(Box, Object.assign({\n    borderColor: \"navy\"\n  }, defaultProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: classes.formRoot,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Add a cabin for booking\"), React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(NativeSelect, {\n    error: agencyIdErrorMsg !== \"\",\n    required: true,\n    id: \"agencyId\",\n    value: agencyId,\n    onChange: e => {\n      setAgencyId(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    disabled: true,\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Select an agency\"), agencies.map((agency, i) => React.createElement(\"option\", {\n    key: i,\n    value: agency.agency_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, agency.name))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: nameErrorMsg != \"\",\n    helperText: nameErrorMsg,\n    required: true,\n    id: \"name\",\n    label: \"Cabin name\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n      e.target.value.length === 0 ? setNameErrorMsg(\"Please insert a cabin name\") : setNameErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: addressErrorMsg != \"\",\n    helperText: addressErrorMsg,\n    required: true,\n    id: \"address\",\n    label: \"Address\",\n    value: address,\n    onChange: e => {\n      setAddress(e.target.value);\n      e.target.value.length === 0 ? setAddressErrorMsg(\"Please insert an address\") : setAddressErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: postcodeErrorMsg != \"\",\n    helperText: postcodeErrorMsg,\n    required: true,\n    id: \"postcode\",\n    label: \"Postcode\",\n    value: postcode,\n    onChange: e => {\n      setPostcode(e.target.value);\n      e.target.value.length === 0 ? setPostcodeErrorMsg(\"Please insert a postcode\") : setPostcodeErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: postareaErrorMsg != \"\",\n    helperText: postareaErrorMsg,\n    required: true,\n    id: \"postarea\",\n    label: \"Postarea\",\n    value: postarea,\n    onChange: e => {\n      setPostarea(e.target.value);\n      e.target.value.length === 0 ? setPostareaErrorMsg(\"Please insert a postarea\") : setPostareaErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: sizeErrorMsg != \"\",\n    helperText: sizeErrorMsg,\n    required: true,\n    id: \"size\",\n    label: \"Cabin size (m2)\",\n    value: size,\n    onChange: e => {\n      setSize(e.target.value);\n      e.target.value.length === 0 ? setSizeErrorMsg(\"Please insert a size(m2) for the cabin\") : setSizeErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: priceErrorMsg != \"\",\n    helperText: priceErrorMsg,\n    required: true,\n    id: \"price\",\n    label: \"Price for a night(Eur)\",\n    value: price,\n    onChange: e => {\n      setPrice(e.target.value);\n      e.target.value.length === 0 ? setPriceErrorMsg(\"Please insert a price for a one night\") : setPriceErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: capacityErrorMsg != \"\",\n    helperText: capacityErrorMsg,\n    required: true,\n    id: \"capacity\",\n    label: \"Capacity\",\n    value: capacity,\n    type: \"number\",\n    InputProps: {\n      inputProps: {\n        min: 1,\n        max: 50\n      }\n    },\n    onChange: e => {\n      setCapacity(e.target.value);\n      e.target.value.length === 0 ? setCapacityErrorMsg(\"Please insert capacity for the cabin\") : setCapacityErrorMsg(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: 30,\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    multiline: true,\n    rows: \"12\",\n    id: \"info\",\n    label: \"Additional information\",\n    value: info,\n    onChange: e => {\n      setInfo(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  })))), React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    onClick: () => handlePostClicked(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, postCompletedMessage));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/postCabin/PostCabinForm.js"],"names":["React","useState","useEffect","TextField","makeStyles","Button","NativeSelect","FormHelperText","Box","axios","useStyles","theme","searchButton","margin","backgroundColor","color","formRoot","spacing","width","formControl","minWidth","defaultProps","bgcolor","m","border","padding","borderRadius","borderColor","PostCabinForm","id","sessionStorage","getItem","token","classes","agencies","setAgencies","name","setName","nameErrorMsg","setNameErrorMsg","address","setAddress","addressErrorMsg","setAddressErrorMsg","postcode","setPostcode","postcodeErrorMsg","setPostcodeErrorMsg","postarea","setPostarea","postareaErrorMsg","setPostareaErrorMsg","price","setPrice","priceErrorMsg","setPriceErrorMsg","size","setSize","sizeErrorMsg","setSizeErrorMsg","info","setInfo","cabinOwnerId","setCabinOwnerId","cabinOwnerIdErrorMsg","setCabinOwnerIdErrorMsg","agencyId","setAgencyId","agencyIdErrorMsg","setAgencyIdErrorMsg","capacity","setCapacity","capacityErrorMsg","setCapacityErrorMsg","serverErrorMsg","setServerErrorMsg","postCompletedMessage","setPostCompletedMessage","getAgencies","get","then","response","console","log","data","Agencies","catch","error","axiosPostCabin","post","agency_id","headers","resetTextFields","msg","handlePostClicked","nameValidationError","priceValidationError","addressValidationError","postcodeValidationError","postareaValidationError","sizeValidationError","agencyIdValidationError","cabinOwnerIdValidationError","capacityValidationError","length","display","e","target","value","map","agency","i","inputProps","min","max","marginTop","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACnCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,CADE;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,KAAK,EAAE;AAHG,GADqB;AAMnCC,EAAAA,QAAQ,EAAE;AACN,4BAAwB;AACpBH,MAAAA,MAAM,EAAEF,KAAK,CAACM,OAAN,CAAc,CAAd,CADY;AAGpBC,MAAAA,KAAK,EAAE;AAHa;AADlB,GANyB;AAanCC,EAAAA,WAAW,EAAE;AACTN,IAAAA,MAAM,EAAEF,KAAK,CAACM,OAAN,CAAc,CAAd,CADC;AAGTG,IAAAA,QAAQ,EAAE;AAHD;AAbsB,CAAL,CAAN,CAA5B;AAoBA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,kBADQ;AAEjBC,EAAAA,CAAC,EAAE,CAFc;AAGjBC,EAAAA,MAAM,EAAE,CAHS;AAIjBC,EAAAA,OAAO,EAAE,CAJQ;AAKjBC,EAAAA,YAAY,EAAE,EALG;AAMjBC,EAAAA,WAAW,EAAE;AANI,CAArB;AAUA,eAAe,SAASC,aAAT,GAAyB;AAEpC,QAAMC,EAAE,GAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAX;AACA,QAAMC,KAAK,GAAGF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd;AACA,QAAME,OAAO,GAAGvB,SAAS,EAAzB;AAEA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BlC,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACmC,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqC,YAAD,EAAeC,eAAf,IAAkCtC,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACuC,OAAD,EAAUC,UAAV,IAAwBxC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACyC,eAAD,EAAkBC,kBAAlB,IAAwC1C,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAAC2C,QAAD,EAAWC,WAAX,IAA0B5C,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC6C,gBAAD,EAAmBC,mBAAnB,IAA0C9C,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM,CAAC+C,QAAD,EAAWC,WAAX,IAA0BhD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiD,gBAAD,EAAmBC,mBAAnB,IAA0ClD,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM,CAACmD,KAAD,EAAQC,QAAR,IAAoBpD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqD,aAAD,EAAgBC,gBAAhB,IAAoCtD,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM,CAACuD,IAAD,EAAOC,OAAP,IAAkBxD,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACyD,YAAD,EAAeC,eAAf,IAAkC1D,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAAC2D,IAAD,EAAOC,OAAP,IAAkB5D,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAAC6D,YAAD,EAAeC,eAAf,IAAkC9D,QAAQ,CAAC4B,EAAD,CAAhD;AACA,QAAM,CAACmC,oBAAD,EAAuBC,uBAAvB,IAAkDhE,QAAQ,CAAC,EAAD,CAAhE;AAEA,QAAM,CAACiE,QAAD,EAAWC,WAAX,IAA0BlE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmE,gBAAD,EAAmBC,mBAAnB,IAA0CpE,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM,CAACqE,QAAD,EAAWC,WAAX,IAA0BtE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuE,gBAAD,EAAmBC,mBAAnB,IAA0CxE,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM,CAACyE,cAAD,EAAiBC,iBAAjB,IAAsC1E,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC2E,oBAAD,EAAuBC,uBAAvB,IAAkD5E,QAAQ,CAAC,EAAD,CAAhE;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM4E,WAAW,GAAG,MAAM;AACtBrE,MAAAA,KAAK,CAACsE,GAAN,CAAU,8BAAV,EAA0C,EAA1C,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA9C,QAAAA,WAAW,CAAC8C,QAAQ,CAACG,IAAT,CAAcC,QAAf,CAAX;AACH,OALD,EAMKC,KANL,CAMW,UAAUC,KAAV,EAAiB;AACpBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,OARL;AASH,KAVD;;AAWAT,IAAAA,WAAW;AACd,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMU,cAAc,GAAG,MAAM;AACzB/E,IAAAA,KAAK,CAACgF,IAAN,CAAW,6BAAX,EAA0C;AACtCrD,MAAAA,IAAI,EAAEA,IADgC;AAEtCI,MAAAA,OAAO,EAAEA,OAF6B;AAGtCI,MAAAA,QAAQ,EAAEA,QAH4B;AAItCI,MAAAA,QAAQ,EAAEA,QAJ4B;AAKtCI,MAAAA,KAAK,EAAEA,KAL+B;AAMtCI,MAAAA,IAAI,EAAEA,IANgC;AAOtCkC,MAAAA,SAAS,EAAExB,QAP2B;AAQtCI,MAAAA,QAAQ,EAAEA,QAR4B;AAStCV,MAAAA,IAAI,EAAEA;AATgC,KAA1C,EAWI;AACI+B,MAAAA,OAAO,EAAE;AACL3D,QAAAA,KAAK,EAAEA;AADF;AADb,KAXJ,EAgBKgD,IAhBL,CAgBU,UAAUC,QAAV,EAAoB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAJ,MAAAA,uBAAuB,CAAC,WAAWzC,IAAX,GAAkB,SAAnB,CAAvB;AACAwD,MAAAA,eAAe;AAClB,KApBL,EAqBKN,KArBL,CAqBW,UAAUC,KAAV,EAAiB;AACpBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACN,QAAlB;AACAN,MAAAA,iBAAiB,CAACY,KAAK,CAACN,QAAN,CAAeG,IAAf,CAAoBS,GAArB,CAAjB;AACH,KAxBL;AAyBH,GA1BD;;AA4BA,QAAMD,eAAe,GAAG,MAAM;AAC1BvD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAI,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAI,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAU,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GATD;;AAWA,QAAMuB,iBAAiB,GAAG,MAAM;AAE5B,QAAIC,mBAAmB,GAAG,KAA1B;AACA,QAAIC,oBAAoB,GAAG,KAA3B;AACA,QAAIC,sBAAsB,GAAG,KAA7B;AACA,QAAIC,uBAAuB,GAAG,KAA9B;AACA,QAAIC,uBAAuB,GAAG,KAA9B;AACA,QAAIC,mBAAmB,GAAG,KAA1B;AACA,QAAIC,uBAAuB,GAAG,KAA9B;AACA,QAAIC,2BAA2B,GAAG,KAAlC;AACA,QAAIC,uBAAuB,GAAG,KAA9B;;AAEA,QAAInE,IAAI,CAACoE,MAAL,KAAgB,CAAhB,IAAqBpE,IAAI,KAAK,EAAlC,EAAsC;AAClCG,MAAAA,eAAe,CAAC,4BAAD,CAAf;AACAwD,MAAAA,mBAAmB,GAAG,IAAtB;AACH,KAHD,MAIK;AACDA,MAAAA,mBAAmB,GAAG,KAAtB;AACAxD,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH;;AACD,QAAIa,KAAK,CAACoD,MAAN,KAAiB,CAAjB,IAAsBpD,KAAK,KAAK,EAApC,EAAwC;AACpCG,MAAAA,gBAAgB,CAAC,uBAAD,CAAhB;AACAyC,MAAAA,oBAAoB,GAAG,IAAvB;AACH,KAHD,MAIK;AACDA,MAAAA,oBAAoB,GAAG,KAAvB;AACAzC,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH;;AACD,QAAIC,IAAI,CAACgD,MAAL,KAAgB,CAAhB,IAAqBhD,IAAI,KAAK,EAAlC,EAAsC;AAClCG,MAAAA,eAAe,CAAC,4BAAD,CAAf;AACAyC,MAAAA,mBAAmB,GAAG,IAAtB;AACH,KAHD,MAIK;AACDA,MAAAA,mBAAmB,GAAG,KAAtB;AACAzC,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH;;AACD,QAAIO,QAAQ,CAACsC,MAAT,KAAoB,CAApB,IAAyBtC,QAAQ,KAAK,EAA1C,EAA8C;AAC1CmC,MAAAA,uBAAuB,GAAG,IAA1B;AACAhC,MAAAA,mBAAmB,CAAC,yBAAD,CAAnB;AACH,KAHD,MAIK;AACDgC,MAAAA,uBAAuB,GAAG,KAA1B;AACAhC,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACH;;AACD,QAAI7B,OAAO,CAACgE,MAAR,KAAmB,CAAnB,IAAwBhE,OAAO,KAAK,EAAxC,EAA4C;AACxCyD,MAAAA,sBAAsB,GAAG,IAAzB;AACAtD,MAAAA,kBAAkB,CAAC,0BAAD,CAAlB;AACH,KAHD,MAIK;AACDsD,MAAAA,sBAAsB,GAAG,KAAzB;AACAtD,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACH;;AACD,QAAIC,QAAQ,CAAC4D,MAAT,KAAoB,CAApB,IAAyB5D,QAAQ,KAAK,EAA1C,EAA8C;AAC1CsD,MAAAA,uBAAuB,GAAG,IAA1B;AACAnD,MAAAA,mBAAmB,CAAC,0BAAD,CAAnB;AACH,KAHD,MAIK;AACDmD,MAAAA,uBAAuB,GAAG,KAA1B;AACAnD,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACH;;AACD,QAAIC,QAAQ,CAACwD,MAAT,KAAoB,CAApB,IAAyBxD,QAAQ,KAAK,EAA1C,EAA8C;AAC1CmD,MAAAA,uBAAuB,GAAG,IAA1B;AACAhD,MAAAA,mBAAmB,CAAC,0BAAD,CAAnB;AACH,KAHD,MAIK;AACDgD,MAAAA,uBAAuB,GAAG,KAA1B;AACAhD,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACH;;AACD,QAAIW,YAAY,CAAC0C,MAAb,KAAwB,CAAxB,IAA6B1C,YAAY,KAAK,EAAlD,EAAsD;AAClDwC,MAAAA,2BAA2B,GAAG,IAA9B;AACArC,MAAAA,uBAAuB,CAAC,6BAAD,CAAvB;AACH,KAHD,MAIK;AACDqC,MAAAA,2BAA2B,GAAG,KAA9B;AACArC,MAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACH;;AACD,QAAIK,QAAQ,CAACkC,MAAT,KAAoB,CAApB,IAAyBlC,QAAQ,KAAK,EAA1C,EAA8C;AAC1CiC,MAAAA,uBAAuB,GAAG,IAA1B;AACA9B,MAAAA,mBAAmB,CAAC,sCAAD,CAAnB;AACH,KAHD,MAIK;AACD8B,MAAAA,uBAAuB,GAAG,KAA1B;AACA9B,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACH;;AAED,QAAIsB,mBAAmB,KAAK,KAAxB,IACAO,2BAA2B,KAAK,KADhC,IAEAL,sBAAsB,KAAK,KAF3B,IAGAC,uBAAuB,KAAK,KAH5B,IAIAC,uBAAuB,KAAK,KAJ5B,IAKAC,mBAAmB,KAAK,KALxB,IAMAC,uBAAuB,KAAK,KAN5B,IAOAL,oBAAoB,KAAK,KAPzB,IAQAO,uBAAuB,KAAK,KARhC,EAQuC;AACnCf,MAAAA,cAAc;AACjB;AACJ,GAhGD;;AAkGA,SACI,oBAAC,GAAD;AAAK,IAAA,WAAW,EAAC;AAAjB,KAA4BnE,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI;AAAM,IAAA,SAAS,EAAEY,OAAO,CAACjB,QAAzB;AAAmC,IAAA,UAAU,MAA7C;AAA8C,IAAA,YAAY,EAAC,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAACyF,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,YAAD;AACI,IAAA,KAAK,EAAErC,gBAAgB,KAAK,EADhC;AACoC,IAAA,QAAQ,MAD5C;AAC6C,IAAA,EAAE,EAAC,UADhD;AAC2D,IAAA,KAAK,EAAEF,QADlE;AAEI,IAAA,QAAQ,EAAGwC,CAAD,IAAO;AACbvC,MAAAA,WAAW,CAACuC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,KAAK,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,EAMK1E,QAAQ,CAAC2E,GAAT,CAAa,CAACC,MAAD,EAASC,CAAT,KACV;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAED,MAAM,CAACpB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKoB,MAAM,CAAC1E,IADZ,CADH,CANL,CADA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZA,EAaA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,YAAY,IAAI,EAAlC;AAAsC,IAAA,UAAU,EAAEA,YAAlD;AAAgE,IAAA,QAAQ,MAAxE;AAAyE,IAAA,EAAE,EAAC,MAA5E;AAAmF,IAAA,KAAK,EAAC,YAAzF;AAAsG,IAAA,KAAK,EAAEF,IAA7G;AACI,IAAA,QAAQ,EAAGsE,CAAD,IAAO;AACbrE,MAAAA,OAAO,CAACqE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACCF,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeJ,MAAf,KAA0B,CAA3B,GAAgCjE,eAAe,CAAC,4BAAD,CAA/C,GAAgFA,eAAe,CAAC,EAAD,CAA/F;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbA,EAmBA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEG,eAAe,IAAI,EAArC;AAAyC,IAAA,UAAU,EAAEA,eAArD;AAAsE,IAAA,QAAQ,MAA9E;AAA+E,IAAA,EAAE,EAAC,SAAlF;AAA4F,IAAA,KAAK,EAAC,SAAlG;AAA4G,IAAA,KAAK,EAAEF,OAAnH;AACI,IAAA,QAAQ,EAAGkE,CAAD,IAAO;AACbjE,MAAAA,UAAU,CAACiE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACCF,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeJ,MAAf,KAA0B,CAA3B,GAAgC7D,kBAAkB,CAAC,0BAAD,CAAlD,GAAiFA,kBAAkB,CAAC,EAAD,CAAnG;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBA,EAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBA,EA0BA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEG,gBAAgB,IAAI,EAAtC;AAA0C,IAAA,UAAU,EAAEA,gBAAtD;AAAwE,IAAA,QAAQ,MAAhF;AAAiF,IAAA,EAAE,EAAC,UAApF;AAA+F,IAAA,KAAK,EAAC,UAArG;AAAgH,IAAA,KAAK,EAAEF,QAAvH;AACI,IAAA,QAAQ,EAAG8D,CAAD,IAAO;AACb7D,MAAAA,WAAW,CAAC6D,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACCF,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeJ,MAAf,KAA0B,CAA3B,GAAgCzD,mBAAmB,CAAC,0BAAD,CAAnD,GAAkFA,mBAAmB,CAAC,EAAD,CAArG;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BA,EA+BA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEG,gBAAgB,IAAI,EAAtC;AAA0C,IAAA,UAAU,EAAEA,gBAAtD;AAAwE,IAAA,QAAQ,MAAhF;AAAiF,IAAA,EAAE,EAAC,UAApF;AAA+F,IAAA,KAAK,EAAC,UAArG;AAAgH,IAAA,KAAK,EAAEF,QAAvH;AACI,IAAA,QAAQ,EAAG0D,CAAD,IAAO;AACbzD,MAAAA,WAAW,CAACyD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACCF,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeJ,MAAf,KAA0B,CAA3B,GAAgCrD,mBAAmB,CAAC,0BAAD,CAAnD,GAAkFA,mBAAmB,CAAC,EAAD,CAArG;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BA,EAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCA,EAqCA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEO,YAAY,IAAI,EAAlC;AAAsC,IAAA,UAAU,EAAEA,YAAlD;AAAgE,IAAA,QAAQ,MAAxE;AAAyE,IAAA,EAAE,EAAC,MAA5E;AAAmF,IAAA,KAAK,EAAC,iBAAzF;AAA2G,IAAA,KAAK,EAAEF,IAAlH;AACI,IAAA,QAAQ,EAAGkD,CAAD,IAAO;AACbjD,MAAAA,OAAO,CAACiD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACCF,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeJ,MAAf,KAA0B,CAA3B,GAAgC7C,eAAe,CAAC,wCAAD,CAA/C,GAA4FA,eAAe,CAAC,EAAD,CAA3G;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCA,EA0CA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEL,aAAa,IAAI,EAAnC;AAAuC,IAAA,UAAU,EAAEA,aAAnD;AAAkE,IAAA,QAAQ,MAA1E;AAA2E,IAAA,EAAE,EAAC,OAA9E;AAAsF,IAAA,KAAK,EAAC,wBAA5F;AAAqH,IAAA,KAAK,EAAEF,KAA5H;AACI,IAAA,QAAQ,EAAGsD,CAAD,IAAO;AACbrD,MAAAA,QAAQ,CAACqD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACCF,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeJ,MAAf,KAA0B,CAA3B,GAAgCjD,gBAAgB,CAAC,uCAAD,CAAhD,GAA4FA,gBAAgB,CAAC,EAAD,CAA5G;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CA,EA+CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CA,EAgDA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEiB,gBAAgB,IAAI,EAAtC;AAA0C,IAAA,UAAU,EAAEA,gBAAtD;AAAwE,IAAA,QAAQ,MAAhF;AAAiF,IAAA,EAAE,EAAC,UAApF;AAA+F,IAAA,KAAK,EAAC,UAArG;AAAgH,IAAA,KAAK,EAAEF,QAAvH;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,UAAU,EAAE;AAAE0C,MAAAA,UAAU,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAE;AAAf;AAAd,KAFhB;AAGI,IAAA,QAAQ,EAAGR,CAAD,IAAO;AACbnC,MAAAA,WAAW,CAACmC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACCF,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeJ,MAAf,KAA0B,CAA3B,GAAgC/B,mBAAmB,CAAC,sCAAD,CAAnD,GAA8FA,mBAAmB,CAAC,EAAD,CAAjH;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhDA,CADA,EAyDI;AAAK,IAAA,KAAK,EAAE;AAAC0C,MAAAA,SAAS,EAAE,EAAZ;AAAgBC,MAAAA,UAAU,EAAE;AAA5B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,UAAnB;AAA8B,IAAA,SAAS,MAAvC;AAAwC,IAAA,IAAI,EAAG,IAA/C;AAAoD,IAAA,EAAE,EAAC,MAAvD;AAA8D,IAAA,KAAK,EAAC,wBAApE;AAA6F,IAAA,KAAK,EAAExD,IAApG;AACD,IAAA,QAAQ,EAAG8C,CAAD,IAAO;AACb7C,MAAAA,OAAO,CAAC6C,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,KAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAzDJ,CAFJ,CADJ,EAoEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,SAAS,EAAE3E,OAAO,CAACrB,YAA/C;AAA6D,IAAA,OAAO,EAAE,MAAMkF,iBAAiB,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApEJ,EAqEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,oBAAL,CArEJ,CADJ;AA0EH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    searchButton: {\r\n        margin: 4,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n    },\r\n    formRoot: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n\r\n            width: '25ch',\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n\r\n        minWidth: 120,\r\n    },\r\n\r\n}));\r\nconst defaultProps = {\r\n    bgcolor: 'background.paper',\r\n    m: 1,\r\n    border: 2,\r\n    padding: 2,\r\n    borderRadius: 16,\r\n    borderColor: 'navy'\r\n\r\n};\r\n\r\nexport default function PostCabinForm() {\r\n\r\n    const id = sessionStorage.getItem('user_id');\r\n    const token = sessionStorage.getItem('token');\r\n    const classes = useStyles();\r\n\r\n    const [agencies, setAgencies] = useState([]);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [nameErrorMsg, setNameErrorMsg] = useState(\"\");\r\n\r\n    const [address, setAddress] = useState(\"\");\r\n    const [addressErrorMsg, setAddressErrorMsg] = useState(\"\");\r\n\r\n    const [postcode, setPostcode] = useState(\"\");\r\n    const [postcodeErrorMsg, setPostcodeErrorMsg] = useState(\"\");\r\n\r\n    const [postarea, setPostarea] = useState(\"\");\r\n    const [postareaErrorMsg, setPostareaErrorMsg] = useState(\"\");\r\n\r\n    const [price, setPrice] = useState(\"\");\r\n    const [priceErrorMsg, setPriceErrorMsg] = useState(\"\");\r\n\r\n    const [size, setSize] = useState(\"\");\r\n    const [sizeErrorMsg, setSizeErrorMsg] = useState(\"\");\r\n\r\n    const [info, setInfo] = useState(\"\");\r\n\r\n    const [cabinOwnerId, setCabinOwnerId] = useState(id);\r\n    const [cabinOwnerIdErrorMsg, setCabinOwnerIdErrorMsg] = useState(\"\");\r\n\r\n    const [agencyId, setAgencyId] = useState(\"\");\r\n    const [agencyIdErrorMsg, setAgencyIdErrorMsg] = useState(\"\");\r\n\r\n    const [capacity, setCapacity] = useState(\"\");\r\n    const [capacityErrorMsg, setCapacityErrorMsg] = useState(\"\");\r\n\r\n    const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\r\n    const [postCompletedMessage, setPostCompletedMessage] = useState(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n        const getAgencies = () => {\r\n            axios.get(\"http://localhost:3001/agency\", {\r\n\r\n            }).then(function (response) {\r\n                console.log(response);\r\n                setAgencies(response.data.Agencies);\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        getAgencies();\r\n    }, []);\r\n\r\n    const axiosPostCabin = () => {\r\n        axios.post('http://localhost:3001/cabin', {\r\n            name: name,\r\n            address: address,\r\n            postcode: postcode,\r\n            postarea: postarea,\r\n            price: price,\r\n            size: size,\r\n            agency_id: agencyId,\r\n            capacity: capacity,\r\n            info: info\r\n        },\r\n            {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setPostCompletedMessage(\"Cabin \" + name + \" posted\");\r\n                resetTextFields();\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                setServerErrorMsg(error.response.data.msg);\r\n            });\r\n    }\r\n\r\n    const resetTextFields = () => {\r\n        setName(\"\");\r\n        setAddress(\"\");\r\n        setPostcode(\"\");\r\n        setPostarea(\"\");\r\n        setPrice(\"\");\r\n        setSize(\"\");\r\n        setAgencyId(\"\");\r\n        setCapacity(\"\");\r\n    }\r\n\r\n    const handlePostClicked = () => {\r\n\r\n        let nameValidationError = false;\r\n        let priceValidationError = false;\r\n        let addressValidationError = false;\r\n        let postcodeValidationError = false;\r\n        let postareaValidationError = false;\r\n        let sizeValidationError = false;\r\n        let agencyIdValidationError = false;\r\n        let cabinOwnerIdValidationError = false;\r\n        let capacityValidationError = false;\r\n\r\n        if (name.length === 0 || name === \"\") {\r\n            setNameErrorMsg(\"Please insert a cabin name\");\r\n            nameValidationError = true;\r\n        }\r\n        else {\r\n            nameValidationError = false;\r\n            setNameErrorMsg(\"\");\r\n        }\r\n        if (price.length === 0 || price === \"\") {\r\n            setPriceErrorMsg(\"Please insert a price\");\r\n            priceValidationError = true;\r\n        }\r\n        else {\r\n            priceValidationError = false;\r\n            setPriceErrorMsg(\"\");\r\n        }\r\n        if (size.length === 0 || size === \"\") {\r\n            setSizeErrorMsg(\"Please insert a cabin size\");\r\n            sizeValidationError = true;\r\n        }\r\n        else {\r\n            sizeValidationError = false;\r\n            setSizeErrorMsg(\"\");\r\n        }\r\n        if (agencyId.length === 0 || agencyId === \"\") {\r\n            agencyIdValidationError = true;\r\n            setAgencyIdErrorMsg(\"Please select an agency\");\r\n        }\r\n        else {\r\n            agencyIdValidationError = false;\r\n            setAgencyIdErrorMsg(\"\");\r\n        }\r\n        if (address.length === 0 || address === \"\") {\r\n            addressValidationError = true;\r\n            setAddressErrorMsg(\"Please insert an address\");\r\n        }\r\n        else {\r\n            addressValidationError = false;\r\n            setAddressErrorMsg(\"\")\r\n        }\r\n        if (postcode.length === 0 || postcode === \"\") {\r\n            postcodeValidationError = true;\r\n            setPostcodeErrorMsg(\"Please insert a postcode\");\r\n        }\r\n        else {\r\n            postcodeValidationError = false;\r\n            setPostcodeErrorMsg(\"\");\r\n        }\r\n        if (postarea.length === 0 || postarea === \"\") {\r\n            postareaValidationError = true;\r\n            setPostareaErrorMsg(\"Please insert a postarea\");\r\n        }\r\n        else {\r\n            postareaValidationError = false;\r\n            setPostareaErrorMsg(\"\");\r\n        }\r\n        if (cabinOwnerId.length === 0 || cabinOwnerId === \"\") {\r\n            cabinOwnerIdValidationError = true;\r\n            setCabinOwnerIdErrorMsg(\"Please insert a cabin owner\");\r\n        }\r\n        else {\r\n            cabinOwnerIdValidationError = false;\r\n            setCabinOwnerIdErrorMsg(\"\");\r\n        }\r\n        if (capacity.length === 0 || capacity === \"\") {\r\n            capacityValidationError = true;\r\n            setCapacityErrorMsg(\"Please insert capacity for the cabin\");\r\n        }\r\n        else {\r\n            capacityValidationError = false;\r\n            setCapacityErrorMsg(\"\");\r\n        }\r\n\r\n        if (nameValidationError === false &&\r\n            cabinOwnerIdValidationError === false &&\r\n            addressValidationError === false &&\r\n            postcodeValidationError === false &&\r\n            postareaValidationError === false &&\r\n            sizeValidationError === false &&\r\n            agencyIdValidationError === false &&\r\n            priceValidationError === false &&\r\n            capacityValidationError === false) {\r\n            axiosPostCabin();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box borderColor=\"navy\" {...defaultProps}>\r\n            <form className={classes.formRoot} noValidate autoComplete=\"off\">\r\n                <h2>Add a cabin for booking</h2>\r\n                <div style={{display: \"flex\"}}>\r\n                <div>\r\n                <NativeSelect\r\n                    error={agencyIdErrorMsg !== \"\"} required id=\"agencyId\" value={agencyId}\r\n                    onChange={(e) => {\r\n                        setAgencyId(e.target.value)\r\n                    }}>\r\n                    <option disabled value=\"\">Select an agency</option>\r\n                    {agencies.map((agency, i) =>\r\n                        <option key={i} value={agency.agency_id}>\r\n                            {agency.name}</option>)}\r\n                </NativeSelect>\r\n\r\n                <br />\r\n                <TextField error={nameErrorMsg != \"\"} helperText={nameErrorMsg} required id=\"name\" label=\"Cabin name\" value={name}\r\n                    onChange={(e) => {\r\n                        setName(e.target.value);\r\n                        (e.target.value.length === 0) ? setNameErrorMsg(\"Please insert a cabin name\") : setNameErrorMsg(\"\")\r\n                    }} />\r\n\r\n                <TextField error={addressErrorMsg != \"\"} helperText={addressErrorMsg} required id=\"address\" label=\"Address\" value={address}\r\n                    onChange={(e) => {\r\n                        setAddress(e.target.value);\r\n                        (e.target.value.length === 0) ? setAddressErrorMsg(\"Please insert an address\") : setAddressErrorMsg(\"\")\r\n                    }} />\r\n                <br />\r\n\r\n                <TextField error={postcodeErrorMsg != \"\"} helperText={postcodeErrorMsg} required id=\"postcode\" label=\"Postcode\" value={postcode}\r\n                    onChange={(e) => {\r\n                        setPostcode(e.target.value);\r\n                        (e.target.value.length === 0) ? setPostcodeErrorMsg(\"Please insert a postcode\") : setPostcodeErrorMsg(\"\")\r\n                    }} />\r\n                <TextField error={postareaErrorMsg != \"\"} helperText={postareaErrorMsg} required id=\"postarea\" label=\"Postarea\" value={postarea}\r\n                    onChange={(e) => {\r\n                        setPostarea(e.target.value);\r\n                        (e.target.value.length === 0) ? setPostareaErrorMsg(\"Please insert a postarea\") : setPostareaErrorMsg(\"\")\r\n                    }} />\r\n                <br />\r\n                <TextField error={sizeErrorMsg != \"\"} helperText={sizeErrorMsg} required id=\"size\" label=\"Cabin size (m2)\" value={size}\r\n                    onChange={(e) => {\r\n                        setSize(e.target.value);\r\n                        (e.target.value.length === 0) ? setSizeErrorMsg(\"Please insert a size(m2) for the cabin\") : setSizeErrorMsg(\"\")\r\n                    }} />\r\n                <TextField error={priceErrorMsg != \"\"} helperText={priceErrorMsg} required id=\"price\" label=\"Price for a night(Eur)\" value={price}\r\n                    onChange={(e) => {\r\n                        setPrice(e.target.value);\r\n                        (e.target.value.length === 0) ? setPriceErrorMsg(\"Please insert a price for a one night\") : setPriceErrorMsg(\"\")\r\n                    }} />\r\n                <br />\r\n                <TextField error={capacityErrorMsg != \"\"} helperText={capacityErrorMsg} required id=\"capacity\" label=\"Capacity\" value={capacity}\r\n                    type=\"number\"\r\n                    InputProps={{ inputProps: { min: 1, max: 50 } }}\r\n                    onChange={(e) => {\r\n                        setCapacity(e.target.value);\r\n                        (e.target.value.length === 0) ? setCapacityErrorMsg(\"Please insert capacity for the cabin\") : setCapacityErrorMsg(\"\")\r\n                    }} />\r\n                    </div>\r\n                    <div style={{marginTop: 30, marginLeft: 10}}>\r\n                     <TextField variant=\"outlined\" multiline rows = \"12\" id=\"info\" label=\"Additional information\" value={info}\r\n                    onChange={(e) => {\r\n                        setInfo(e.target.value);\r\n                    }} />\r\n                    </div>\r\n                    </div>\r\n            </form>\r\n            <Button variant=\"contained\" className={classes.searchButton} onClick={() => handlePostClicked()}>Submit</Button>\r\n            <h4>{postCompletedMessage}</h4>\r\n        </Box>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}