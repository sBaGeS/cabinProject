{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\getServiceReport\\\\GetServiceReport.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport GetAgencies from '../getAgencies/GetAgencies';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport { getToken } from '../../Utils/Common';\nimport dateFormat from 'dateformat';\nconst useStyles = makeStyles(() => ({\n  searchButton: {\n    marginTop: 5,\n    backgroundColor: 'navy',\n    color: 'white',\n    '&:hover': {\n      background: \"white\",\n      color: 'navy'\n    }\n  },\n  datePicker: {\n    marginTop: 5,\n    marginBottom: 5\n  }\n}));\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  m: 1,\n  border: 2,\n  padding: 2,\n  borderRadius: 16,\n  borderColor: 'navy'\n};\nexport default function GetServiceReport(props) {\n  const classes = useStyles();\n  const [serviceReport, setServiceReport] = useState([]);\n  const [agencyId, setAgencyId] = useState(\"\");\n  const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  let token = getToken();\n\n  const axiosGetServiceReport = query => {\n    axios.get(\"http://localhost:3001/servicereport?\" + query, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setServiceReport(response.data.serviceReport);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const handlePostClicked = () => {\n    let query = \"\";\n    setEndDate(dateFormat(endDate, \"yyyy-mm-dd\"));\n    setStartDate(dateFormat(startDate, \"yyyy-mm-dd\"));\n\n    if (agencyId != \"\") {\n      query += \"agency_id=\" + agencyId + \"&\";\n    }\n\n    if (startDate != \"\" && endDate != \"\") {\n      query += \"startDate=\" + startDate + \"&endDate=\" + endDate;\n    }\n\n    axiosGetServiceReport(query);\n  };\n\n  return React.createElement(Box, Object.assign({\n    borderColor: \"navy\"\n  }, defaultProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Service Reports\"), React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(GetAgencies, {\n    agencyId: agencyId,\n    setAgencyId: setAgencyId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    className: classes.datePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"start_date\",\n    label: \"Start date\",\n    value: startDate,\n    onChange: date => setStartDate(dateFormat(date, \"yyyy-mm-dd\")),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"end_date\",\n    label: \"End date\",\n    value: endDate,\n    onChange: date => setEndDate(dateFormat(date, \"yyyy-mm-dd\")),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    onClick: () => handlePostClicked(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontWeight: 900,\n      fontSize: 16,\n      marginLeft: 130\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, serverErrorMsg)));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/getServiceReport/GetServiceReport.js"],"names":["React","useState","useEffect","makeStyles","Button","GetAgencies","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","Box","Paper","axios","getToken","dateFormat","useStyles","searchButton","marginTop","backgroundColor","color","background","datePicker","marginBottom","defaultProps","bgcolor","m","border","padding","borderRadius","borderColor","GetServiceReport","props","classes","serviceReport","setServiceReport","agencyId","setAgencyId","serverErrorMsg","setServerErrorMsg","startDate","setStartDate","endDate","setEndDate","token","axiosGetServiceReport","query","get","headers","then","response","console","log","data","catch","error","handlePostClicked","display","date","fontWeight","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport GetAgencies from '../getAgencies/GetAgencies';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from 'axios';\r\nimport {getToken} from '../../Utils/Common';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    searchButton: {\r\n        marginTop: 5,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n        '&:hover': {\r\n            background: \"white\",\r\n            color: 'navy',\r\n        },\r\n    },\r\n    datePicker: {\r\n        marginTop: 5,\r\n        marginBottom: 5\r\n    }\r\n}));\r\nconst defaultProps = {\r\n    bgcolor: 'background.paper',\r\n    m: 1,\r\n    border: 2,\r\n    padding: 2,\r\n    borderRadius: 16,\r\n    borderColor: 'navy'\r\n\r\n};\r\n\r\nexport default function GetServiceReport(props) {\r\n\r\n    const classes = useStyles();\r\n    const [serviceReport, setServiceReport] = useState([]);\r\n    const [agencyId, setAgencyId] = useState(\"\");\r\n    const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\r\n    const [startDate, setStartDate] = useState();\r\n    const [endDate, setEndDate] = useState();\r\n\r\n    let token = getToken();\r\n\r\n        const axiosGetServiceReport = (query) => {\r\n            axios.get(\"http://localhost:3001/servicereport?\"+query, {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            }).then(function (response) {\r\n                console.log(response);\r\n                setServiceReport(response.data.serviceReport);\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n\r\n\r\n    const handlePostClicked = () => {\r\n        let query = \"\";\r\n        setEndDate(dateFormat(endDate, \"yyyy-mm-dd\"));\r\n        setStartDate(dateFormat(startDate, \"yyyy-mm-dd\"));\r\n        if(agencyId != \"\"){\r\n          query += \"agency_id=\" + agencyId+\"&\";\r\n        }\r\n        if(startDate != \"\" && endDate != \"\"){\r\n           \r\n            query += \"startDate=\" + startDate+\"&endDate=\"+endDate;\r\n        }\r\n        axiosGetServiceReport(query);\r\n    }\r\n    return (\r\n\r\n        <Box borderColor=\"navy\" {...defaultProps}>\r\n            <h2>Service Reports</h2>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div>\r\n                    <GetAgencies agencyId={agencyId} setAgencyId={setAgencyId} />\r\n                    <br />\r\n                    <Paper className={classes.datePicker}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                margin=\"normal\"\r\n                                id=\"start_date\"\r\n                                label=\"Start date\"\r\n                                value={startDate}\r\n                                onChange={(date) =>  setStartDate(dateFormat(date, \"yyyy-mm-dd\"))}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                margin=\"normal\"\r\n                                id=\"end_date\"\r\n                                label=\"End date\"\r\n                                value={endDate}\r\n                                onChange={(date) =>  setEndDate(dateFormat(date, \"yyyy-mm-dd\"))}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider><br />\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Button variant=\"contained\" className={classes.searchButton} onClick={() => handlePostClicked()}>Search</Button>\r\n                <p style={{ color: \"red\", fontWeight: 900, fontSize: 16, marginLeft: 130 }}>{serverErrorMsg}</p>\r\n            </div>\r\n        </Box>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}