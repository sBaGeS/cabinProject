{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\postServiceReservation\\\\PostServiceReservationDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport axios from 'axios';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Typography } from '@material-ui/core';\nimport { getUserId, getToken } from '../../Utils/Common';\nimport dateFormat from 'dateformat';\nexport default function PostServiceReservation(props) {\n  const [dialogOpen, setDialogOpen] = useState(true);\n  const user = getUserId();\n  const token = getToken();\n  const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\n  const [reservationDate, setReservationDate] = useState(new Date());\n  let reservations = props.reservations;\n\n  const axiosPostServiceReservation = () => {\n    axios.post(\"http://localhost:3001/serviceReservation/\", {\n      service_id: props.service_id,\n      person_id: user,\n      reservationdate: reservationDate\n    }, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setTimeout(() => {\n        setDialogOpen(false);\n      }, 2000);\n    }).catch(function (error) {\n      console.log(error.response);\n      setServerErrorMsg(error.response.data.msg);\n    });\n  };\n\n  const handleClose = () => {\n    setDialogOpen(false);\n    props.book(false);\n  };\n\n  const handleBookClicked = () => {\n    axiosPostServiceReservation();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: dialogOpen,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Reserve service\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"You are reserving \", React.createElement(\"span\", {\n    style: {\n      fontWeight: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.service)), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Please select date below\"), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd/MM/yyyy\",\n    margin: \"normal\",\n    id: \"reservation_date\",\n    label: \"Date\",\n    disablePast: \"true\",\n    value: reservationDate,\n    onChange: date => setReservationDate(dateFormat(date, \"yyyy-mm-dd\")),\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontWeight: 900,\n      fontSize: 17,\n      marginLeft: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, serverErrorMsg)), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleBookClicked(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Book\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleClose(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Cancel\"))));\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/postServiceReservation/PostServiceReservationDialog.js"],"names":["React","useState","useEffect","Button","Dialog","DialogActions","DialogContent","DialogTitle","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","axios","FormControl","Typography","getUserId","getToken","dateFormat","PostServiceReservation","props","dialogOpen","setDialogOpen","user","token","serverErrorMsg","setServerErrorMsg","reservationDate","setReservationDate","Date","reservations","axiosPostServiceReservation","post","service_id","person_id","reservationdate","headers","then","response","console","log","setTimeout","catch","error","data","msg","handleClose","book","handleBookClicked","fontWeight","service","date","color","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {MuiPickersUtilsProvider,KeyboardDatePicker} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport axios from 'axios';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Typography } from '@material-ui/core';\r\nimport { getUserId, getToken } from '../../Utils/Common';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function PostServiceReservation(props) {\r\n    \r\n    const [dialogOpen, setDialogOpen] = useState(true);\r\n    const user = getUserId();\r\n    const token = getToken();\r\n    const [serverErrorMsg, setServerErrorMsg] = useState(\"\");\r\n    const [reservationDate, setReservationDate] = useState(new Date());\r\n    let reservations = props.reservations;\r\n\r\n  \r\n\r\n    const axiosPostServiceReservation = () => {\r\n        axios.post(\"http://localhost:3001/serviceReservation/\", {\r\n            service_id: props.service_id,\r\n            person_id: user,\r\n            reservationdate: reservationDate,\r\n        },\r\n            {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setTimeout(() => {\r\n                    setDialogOpen(false);\r\n                    }, 2000); \r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n                setServerErrorMsg(error.response.data.msg);\r\n            });\r\n    }\r\n    \r\n\r\n    const handleClose = () => {\r\n        setDialogOpen(false);\r\n        props.book(false);\r\n    };\r\n    const handleBookClicked = () => {\r\n        axiosPostServiceReservation();\r\n    }\r\n   \r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Reserve service</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography>\r\n                        You are reserving <span style={{fontWeight: 900}}>{props.service}</span>\r\n                    </Typography>\r\n                   \r\n                    <Typography>\r\n                    Please select date below  \r\n                    </Typography>\r\n                    <FormControl>\r\n                    <br/>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"dd/MM/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"reservation_date\"\r\n          label=\"Date\"\r\n          disablePast = \"true\"\r\n          value={reservationDate}\r\n          onChange={(date) => setReservationDate(dateFormat(date,\"yyyy-mm-dd\"))}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n         </MuiPickersUtilsProvider>\r\n         </FormControl>\r\n                    <p style={{ color: \"red\", fontWeight: 900, fontSize: 17, marginLeft: 40}}>{serverErrorMsg}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button variant=\"contained\" onClick={() => handleBookClicked()}>Book</Button>\r\n                <Button variant=\"contained\" onClick={() => handleClose()}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}