{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\pages\\\\service_details\\\\GetServiceDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { getToken, getUserId, getAdmin } from '../../../Utils/Common';\nimport dateFormat from 'dateformat';\nimport PostServiceReservationDialog from '../../postServiceReservation/PostServiceReservationDialog';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary\n  },\n  tableHeader: {\n    backgroundColor: 'navy'\n  },\n  tableHeaderCell: {\n    color: 'white'\n  },\n  agencyInfo: {\n    margin: 4,\n    height: 250\n  },\n  editButton: {\n    margin: 8,\n    backgroundColor: 'navy',\n    color: 'white',\n    minWidth: 50,\n    float: 'right'\n  }\n}));\nexport default function GetServiceDetails(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const serviceId = props.match.params.id;\n  const token = getToken();\n  const userId = getUserId();\n  const [service, setService] = useState([]);\n  const [agency, setAgency] = useState([]);\n  const [agencyId, setAgencyId] = useState(\"\");\n  const [servicesLoaded, setServicesLoaded] = useState(false);\n  const [book, setBook] = useState(false);\n  const [bookedMsg, setBookedMsg] = useState(\"\");\n  let dialog;\n  const today = dateFormat(Date(), \"dd/mm/yyyy\");\n  useEffect(() => {\n    const getServices = () => {\n      axios.get(\"http://localhost:3001/service?service_id=\" + serviceId, {\n        headers: {\n          token: token\n        }\n      }).then(function (response) {\n        console.log(response);\n        setService(response.data.services);\n        setServicesLoaded(true);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    getServices();\n  }, []);\n\n  const getAgencies = a => {\n    axios.get(\"http://localhost:3001/agency?id=\" + service[0].agency_id, {\n      headers: {\n        token: token\n      }\n    }).then(function (response) {\n      console.log(response);\n      setAgency(response.data.Agencies);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    setServicesLoaded(false);\n  };\n\n  if (servicesLoaded) {\n    getAgencies();\n  }\n\n  if (book) {\n    dialog = React.createElement(PostServiceReservationDialog, {\n      service: service[0].name,\n      service_id: service[0].service_id,\n      agency_id: agency[0].agency_id,\n      book: setBook,\n      bookedMsg: setBookedMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    });\n  } else {\n    dialog = \"\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Service Details\"), React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    className: classes.tableHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Service\"), React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Price\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, service.map((service, i) => React.createElement(TableRow, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, service.name), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, service.price))))))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    className: classes.tableHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Information\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, service.map((service, i) => React.createElement(TableRow, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, service.info))))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    className: classes.tableHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Agency\"), React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Address\"), React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Postarea\"), React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Phonenumber\"), React.createElement(TableCell, {\n    className: classes.tableHeaderCell,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Email\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, agency.map((agency, i) => React.createElement(TableRow, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, agency.name), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, agency.address), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, agency.postarea), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, agency.phonenumber), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, agency.email))))))), React.createElement(Button, {\n    className: classes.editButton,\n    onClick: () => setBook(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Book\"))), dialog);\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/pages/service_details/GetServiceDetails.js"],"names":["React","useState","useEffect","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Grid","useHistory","getToken","getUserId","getAdmin","dateFormat","PostServiceReservationDialog","useStyles","theme","root","flexGrow","paper","padding","spacing","color","palette","text","secondary","tableHeader","backgroundColor","tableHeaderCell","agencyInfo","margin","height","editButton","minWidth","float","GetServiceDetails","props","classes","history","serviceId","match","params","id","token","userId","service","setService","agency","setAgency","agencyId","setAgencyId","servicesLoaded","setServicesLoaded","book","setBook","bookedMsg","setBookedMsg","dialog","today","Date","getServices","get","headers","then","response","console","log","data","services","catch","error","getAgencies","a","agency_id","Agencies","name","service_id","table","map","i","price","info","address","postarea","phonenumber","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getToken, getUserId, getAdmin } from '../../../Utils/Common';\r\nimport dateFormat from 'dateformat';\r\nimport PostServiceReservationDialog from '../../postServiceReservation/PostServiceReservationDialog';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tableHeader: {\r\n        backgroundColor: 'navy',\r\n\r\n    },\r\n    tableHeaderCell: {\r\n        color: 'white'\r\n    },\r\n    agencyInfo: {\r\n        margin: 4,\r\n        height: 250\r\n\r\n    },\r\n    editButton: {\r\n        margin: 8,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n        minWidth: 50,\r\n        float: 'right'\r\n    }\r\n}));\r\n\r\nexport default function GetServiceDetails(props) {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const serviceId = props.match.params.id;\r\n\r\n    const token = getToken();\r\n    const userId = getUserId();\r\n\r\n    const [service, setService] = useState([]);\r\n    const [agency, setAgency] = useState([]);\r\n    const [agencyId, setAgencyId] = useState(\"\");\r\n    const [servicesLoaded, setServicesLoaded] = useState(false);\r\n\r\n    const [book, setBook] = useState(false);\r\n    const [bookedMsg, setBookedMsg] = useState(\"\");\r\n\r\n    let dialog;\r\n\r\n    const today = dateFormat(Date(), \"dd/mm/yyyy\");\r\n\r\n    useEffect(() => {\r\n        const getServices = () => {\r\n            axios.get(\"http://localhost:3001/service?service_id=\" + serviceId, {\r\n                headers: {\r\n                    token: token\r\n                }\r\n            })\r\n                .then(function (response) {\r\n                    console.log(response);\r\n                    setService(response.data.services);\r\n                    setServicesLoaded(true); \r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        \r\n        getServices();\r\n        \r\n    }, []);\r\n    const getAgencies = (a) => {\r\n        axios.get(\"http://localhost:3001/agency?id=\" + service[0].agency_id, {\r\n            headers: {\r\n                token: token\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n                setAgency(response.data.Agencies);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n            setServicesLoaded(false);\r\n    }\r\n    if(servicesLoaded){\r\n        getAgencies();\r\n    }\r\n    if(book){\r\n        dialog = <PostServiceReservationDialog service = {service[0].name} service_id = {service[0].service_id} agency_id = {agency[0].agency_id}\r\n        book = {setBook} bookedMsg = {setBookedMsg} />;\r\n    }\r\n    else {\r\n        dialog = \"\";\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Service Details</h3>\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={3}>\r\n\r\n                    <Grid item xs={6}>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"customized table\">\r\n                                <TableHead className={classes.tableHeader}>\r\n                                    <TableRow>\r\n                                        <TableCell className={classes.tableHeaderCell} align=\"left\">Service</TableCell>\r\n                                        <TableCell className={classes.tableHeaderCell} align=\"left\">Price</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {service.map((service, i) => <TableRow key={i}>\r\n                                        <TableCell align=\"left\">{service.name}</TableCell>\r\n                                        <TableCell align=\"left\">{service.price}</TableCell>\r\n                                    </TableRow>)}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"customized table\">\r\n                                <TableHead className={classes.tableHeader}>\r\n                                    <TableRow>\r\n                                        <TableCell className={classes.tableHeaderCell} align=\"center\">Information</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {service.map((service, i) => <TableRow key={i}>\r\n                                        <TableCell align=\"left\">{service.info}</TableCell>\r\n                                    </TableRow>)}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"customized table\">\r\n                                <TableHead className={classes.tableHeader}>\r\n                                    <TableRow>\r\n                                        <TableCell className={classes.tableHeaderCell}>Agency</TableCell>\r\n                                        <TableCell className={classes.tableHeaderCell} align=\"right\">Address</TableCell>\r\n                                        <TableCell className={classes.tableHeaderCell} align=\"right\">Postarea</TableCell>\r\n                                        <TableCell className={classes.tableHeaderCell} align=\"right\">Phonenumber</TableCell>\r\n                                        <TableCell className={classes.tableHeaderCell} align=\"center\">Email</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {agency.map((agency, i) => <TableRow key={i}>\r\n                                        <TableCell align=\"right\">{agency.name}</TableCell>\r\n                                        <TableCell align=\"right\">{agency.address}</TableCell>\r\n                                        <TableCell align=\"right\">{agency.postarea}</TableCell>\r\n                                        <TableCell align=\"right\">{agency.phonenumber}</TableCell>\r\n                                        <TableCell align=\"right\">{agency.email}</TableCell>\r\n                                    </TableRow>)}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                    <Button className = {classes.editButton} onClick = {() => setBook(true)}>Book</Button>\r\n                </Grid>\r\n            </Paper>\r\n            {dialog}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}