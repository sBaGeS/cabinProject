{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\getCabins\\\\CabinTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport dateFormat from 'dateformat';\nconst useStyles = makeStyles({\n  cabinDiv: {\n    padding: 8,\n    maxWidth: 800,\n    margin: 4\n  },\n  tableHeader: {\n    backgroundColor: 'navy'\n  },\n  tableHeaderCell: {\n    color: 'white'\n  },\n  bookButton: {\n    margin: 4,\n    backgroundColor: 'navy',\n    color: 'white'\n  },\n  infoButton: {\n    margin: 4,\n    backgroundColor: 'navy',\n    color: 'white',\n    minWidth: 50\n  }\n});\nexport default function CabinTable(props) {\n  const classes = useStyles();\n  const query = props.query;\n  const [cabins, setCabins] = useState([]);\n  useEffect(() => {\n    const getCabins = () => {\n      axios.get(\"http://localhost:3001/cabin?\" + query, {}).then(function (response) {\n        console.log(response);\n        setCabins(response.data.Cabins);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    if (props.searchClicked > 0) {\n      getCabins();\n    }\n  }, [props.searchClicked]);\n  useEffect(() => {\n    for (let cabin of cabins) {\n      let reserved = false;\n      axios.get(\"http://localhost:3001/checkReservations/\" + cabin.cabin_id, {}).then(function (response) {\n        console.log(response);\n        let reservations = response.data.Reservations;\n\n        for (let reservation of reservations) {\n          if (dateFormat(props.startDate, \"mm/dd/yyyy\") >= dateFormat(reservation.arrivaldate, \"mm/dd/yyyy\") && dateFormat(props.endDate, \"mm/dd/yyyy\") <= dateFormat(reservation.leavedate, \"mm/dd/yyyy\")) {\n            reserved = true;\n          } else if (dateFormat(props.startDate, \"mm/dd/yyyy\") <= dateFormat(reservation.leavedate, \"mm/dd/yyyy\") && dateFormat(props.endDate, \"mm/dd/yyyy\") >= dateFormat(reservation.leavedate, \"mm/dd/yyyy\")) {\n            reserved = true;\n          } else if (dateFormat(props.startDate, \"mm/dd/yyyy\") <= dateFormat(reservation.arrivaldate, \"mm/dd/yyyy\") && dateFormat(props.endDate, \"mm/dd/yyyy\") >= dateFormat(reservation.arrivaldate, \"mm/dd/yyyy\")) {\n            reserved = true;\n          }\n\n          if (reserved == true) {\n            let array = [...cabins];\n            let index = cabins.indexOf(cabin);\n\n            if (index !== -1) {\n              array.splice(index, 1);\n              setCabins(array);\n            }\n          }\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, [cabins]);\n\n  if (props.searchClicked > 0) {\n    return React.createElement(\"div\", {\n      className: classes.cabinDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(TableContainer, {\n      component: Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"customized table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      className: classes.tableHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: classes.tableHeaderCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      className: classes.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Agency\"), React.createElement(TableCell, {\n      className: classes.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Postarea\"), React.createElement(TableCell, {\n      className: classes.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Capacity\"), React.createElement(TableCell, {\n      className: classes.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Size\"), React.createElement(TableCell, {\n      className: classes.tableHeaderCell,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Price\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, cabins.map((cabin, i) => React.createElement(TableRow, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Button, {\n      href: `/cabin_detail/${cabin.cabin_id}?startDate=${props.startDate}&endDate=${props.endDate}`,\n      className: classes.infoButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, cabin.name)), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, cabin.agencyName), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, cabin.postarea), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, cabin.capacity), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, cabin.size, \"m2\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, cabin.price, \"\\u20AC\")))))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/getCabins/CabinTable.js"],"names":["React","useState","useEffect","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","dateFormat","useStyles","cabinDiv","padding","maxWidth","margin","tableHeader","backgroundColor","tableHeaderCell","color","bookButton","infoButton","minWidth","CabinTable","props","classes","query","cabins","setCabins","getCabins","get","then","response","console","log","data","Cabins","catch","error","searchClicked","cabin","reserved","cabin_id","reservations","Reservations","reservation","startDate","arrivaldate","endDate","leavedate","array","index","indexOf","splice","table","map","i","name","agencyName","postarea","capacity","size","price"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst useStyles = makeStyles({\r\n    cabinDiv: {\r\n        padding: 8,\r\n        maxWidth: 800,\r\n        margin: 4,\r\n    },\r\n    tableHeader: {\r\n        backgroundColor: 'navy',\r\n    },\r\n    tableHeaderCell: {\r\n        color: 'white'\r\n    },\r\n    bookButton: {\r\n        margin: 4,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n    },\r\n    infoButton: {\r\n        margin: 4,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n        minWidth: 50,\r\n    },\r\n});\r\n\r\nexport default function CabinTable(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const query = props.query;\r\n    const [cabins, setCabins] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getCabins = () => {\r\n            axios.get(\"http://localhost:3001/cabin?\" + query, {\r\n            })\r\n                .then(function (response) {\r\n                    console.log(response);\r\n                    setCabins(response.data.Cabins);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n\r\n        if (props.searchClicked > 0) {\r\n            getCabins();\r\n        }\r\n    }, [props.searchClicked]);\r\n\r\n    useEffect(() => {\r\n            for (let cabin of cabins)\r\n            {\r\n               let reserved = false;\r\n              axios.get(\"http://localhost:3001/checkReservations/\" + cabin.cabin_id, {\r\n                  })\r\n                      .then(function (response) {\r\n                          console.log(response);\r\n\r\n                          let reservations = response.data.Reservations;\r\n\r\n                          for (let reservation of reservations)\r\n                          {\r\n\r\n                          if (dateFormat(props.startDate, \"mm/dd/yyyy\") >= dateFormat(reservation.arrivaldate, \"mm/dd/yyyy\") && dateFormat(props.endDate, \"mm/dd/yyyy\") <= dateFormat(reservation.leavedate, \"mm/dd/yyyy\"))\r\n                          {\r\n                            reserved = true;\r\n                          }\r\n\r\n                          else if (dateFormat(props.startDate, \"mm/dd/yyyy\") <= dateFormat(reservation.leavedate, \"mm/dd/yyyy\") && dateFormat(props.endDate, \"mm/dd/yyyy\") >= dateFormat(reservation.leavedate, \"mm/dd/yyyy\"))\r\n                          {\r\n                            reserved = true;\r\n                          }\r\n\r\n                          else if (dateFormat(props.startDate, \"mm/dd/yyyy\") <= dateFormat(reservation.arrivaldate, \"mm/dd/yyyy\") && dateFormat(props.endDate, \"mm/dd/yyyy\") >= dateFormat(reservation.arrivaldate, \"mm/dd/yyyy\"))\r\n                          {\r\n                            reserved = true;\r\n                          }\r\n\r\n                          if (reserved == true)\r\n                          {\r\n                                let array = [...cabins]; \r\n                                let index = cabins.indexOf(cabin);\r\n                                if (index !== -1) {\r\n                                  array.splice(index, 1);\r\n                                  setCabins(array);\r\n                                }\r\n                          }\r\n                          }\r\n                      })\r\n                      .catch(function (error) {\r\n                          console.log(error);\r\n                      })    \r\n                  } \r\n    },[cabins]);\r\n      \r\n    if (props.searchClicked > 0) {\r\n        return (\r\n            <div className={classes.cabinDiv}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"customized table\">\r\n                        <TableHead className={classes.tableHeader}>\r\n                            <TableRow>\r\n                                <TableCell className={classes.tableHeaderCell}>Name</TableCell>\r\n                                <TableCell className={classes.tableHeaderCell} align=\"right\">Agency</TableCell>\r\n                                <TableCell className={classes.tableHeaderCell} align=\"right\">Postarea</TableCell>\r\n                                <TableCell className={classes.tableHeaderCell} align=\"right\">Capacity</TableCell>\r\n                                <TableCell className={classes.tableHeaderCell} align=\"right\">Size</TableCell>\r\n                                <TableCell className={classes.tableHeaderCell} align=\"right\">Price</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {cabins.map((cabin, i) => <TableRow key={i}>\r\n                                <TableCell><Button href= {`/cabin_detail/${cabin.cabin_id}?startDate=${props.startDate}&endDate=${props.endDate}`} className= {classes.infoButton}>{cabin.name}</Button></TableCell>\r\n                                <TableCell align=\"right\">{cabin.agencyName}</TableCell>\r\n                                <TableCell align=\"right\">{cabin.postarea}</TableCell>\r\n                                <TableCell align=\"right\">{cabin.capacity}</TableCell>\r\n                                <TableCell align=\"right\">{cabin.size}m2</TableCell>\r\n                                <TableCell align=\"right\">{cabin.price}€</TableCell>\r\n                            </TableRow>)} \r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        )\r\n    }\r\n\r\nelse{\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}