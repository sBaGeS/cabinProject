{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pauli\\\\Desktop\\\\groupC\\\\Frontend\\\\vp-app\\\\src\\\\components\\\\pages\\\\userInfo\\\\UserInfoTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport EditUserInfoFormDialog from './EditUserInfoFormDialog';\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 800\n  },\n  paper: {\n    maxWidth: 800\n  },\n  searchButton: {\n    margin: 4,\n    backgroundColor: 'navy',\n    color: 'white'\n  }\n});\nexport default function UserInfoTable() {\n  const classes = useStyles();\n  const [user, setUser] = useState([]);\n  const [edit, setEdit] = useState(false);\n  let dialog;\n  let token = sessionStorage.getItem('token');\n  let id = sessionStorage.getItem('user_id');\n  console.log(user);\n  useEffect(() => {\n    const getUser = id => {\n      axios.get(\"http://localhost:3001/person?id=\" + id, {\n        headers: {\n          token: token\n        }\n      }).then(function (response) {\n        console.log(response);\n        setUser(response.data.Persons);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    getUser(id);\n  }, []);\n\n  if (edit) {\n    dialog = React.createElement(EditUserInfoFormDialog, {\n      userData: user,\n      edit: setEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  } else {\n    dialog = \"\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.paper,\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, user.map((user, i) => React.createElement(TableHead, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Firstname\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, user.firstname)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Lastname\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, user.lastname)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Address\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, user.address)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Postcode\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, user.postcode)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Postarea\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, user.postarea)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Phonenumber\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, user.phonenumber)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Email\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, user.email)))))), React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.searchButton,\n    onClick: () => edit ? setEdit(false) : setEdit(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Edit\"), dialog);\n}","map":{"version":3,"sources":["C:/Users/Pauli/Desktop/groupC/Frontend/vp-app/src/components/pages/userInfo/UserInfoTable.js"],"names":["React","useState","useEffect","axios","withStyles","makeStyles","Table","TableCell","TableContainer","TableHead","TableRow","Paper","Button","EditUserInfoFormDialog","useStyles","table","maxWidth","paper","searchButton","margin","backgroundColor","color","UserInfoTable","classes","user","setUser","edit","setEdit","dialog","token","sessionStorage","getItem","id","console","log","getUser","get","headers","then","response","data","Persons","catch","error","map","i","firstname","lastname","address","postcode","postarea","phonenumber","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditUserInfoFormDialog from './EditUserInfoFormDialog';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        maxWidth: 800,\r\n    },\r\n    paper: {\r\n        maxWidth: 800,\r\n    },\r\n    searchButton: {\r\n        margin: 4,\r\n        backgroundColor: 'navy',\r\n        color: 'white',\r\n      }\r\n});\r\n\r\nexport default function UserInfoTable() {\r\n\r\n    const classes = useStyles();\r\n    const [user, setUser] = useState([]);\r\n    const [edit, setEdit] = useState(false);\r\n    let dialog;\r\n    let token = sessionStorage.getItem('token');\r\n    let id = sessionStorage.getItem('user_id');\r\n    console.log(user);\r\n   \r\n    useEffect(() => {\r\n        const getUser = (id) => {\r\n            axios.get(\"http://localhost:3001/person?id=\" + id, {\r\n                headers: {\r\n                  token: token\r\n                }\r\n            })\r\n                .then(function (response) {\r\n                    console.log(response);\r\n                    setUser(response.data.Persons);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n        getUser(id);\r\n    }, []);\r\n\r\n    if(edit){\r\n        dialog = <EditUserInfoFormDialog userData = {user} edit = {setEdit} />;\r\n    }\r\n    else{\r\n        dialog = \"\";\r\n    }\r\n    return (\r\n        <div>\r\n            <TableContainer className = {classes.paper} component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    {user.map((user, i) =>\r\n                        <TableHead key={i}>\r\n                            <TableRow>\r\n                                <TableCell>Firstname</TableCell>\r\n                                <TableCell>{user.firstname}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Lastname</TableCell>\r\n                                <TableCell>{user.lastname}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Address</TableCell>\r\n                                <TableCell>{user.address}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Postcode</TableCell>\r\n                                <TableCell>{user.postcode}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Postarea</TableCell>\r\n                                <TableCell>{user.postarea}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Phonenumber</TableCell>\r\n                                <TableCell>{user.phonenumber}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Email</TableCell>\r\n                                <TableCell>{user.email}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                    )}\r\n                </Table>\r\n            </TableContainer>\r\n            <Button variant=\"contained\" className = {classes.searchButton} onClick={() => edit ? setEdit(false) : setEdit(true)}>Edit</Button>\r\n            {dialog}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}